// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cut_packet_cut_packet,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.476000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1228,HLS_SYN_LUT=154,HLS_VERSION=2021_2}" *)

module cut_packet (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        input_r_TKEEP,
        input_r_TSTRB,
        input_r_TLAST,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY,
        output_r_TKEEP,
        output_r_TSTRB,
        output_r_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input  [511:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
input  [63:0] input_r_TKEEP;
input  [63:0] input_r_TSTRB;
input  [0:0] input_r_TLAST;
output  [511:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;
output  [63:0] output_r_TKEEP;
output  [63:0] output_r_TSTRB;
output  [0:0] output_r_TLAST;

 reg    ap_rst_n_inv;
reg   [0:0] fsmState;
reg   [511:0] prevWord_data_V;
reg   [63:0] prevWord_keep_V;
reg   [0:0] rs_firstWord;
reg    input_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] fsmState_load_load_fu_167_p1;
wire   [0:0] tmp_nbreadreq_fu_84_p6;
reg    output_r_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] fsmState_load_reg_288;
reg   [0:0] tmp_reg_292;
reg   [0:0] rs_firstWord_load_reg_316;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] fsmState_load_reg_288_pp0_iter1_reg;
reg   [0:0] tmp_reg_292_pp0_iter1_reg;
reg   [0:0] rs_firstWord_load_reg_316_pp0_iter1_reg;
reg    ap_predicate_op8_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op53_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_predicate_op61_write_state3;
wire    regslice_both_output_r_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] tmp_data_V_3_reg_296;
reg   [63:0] tmp_keep_V_3_reg_302;
reg   [63:0] tmp_strb_V_reg_308;
wire   [0:0] rs_firstWord_load_load_fu_187_p1;
wire   [0:0] sendWord_last_V_2_fu_201_p2;
reg   [0:0] sendWord_last_V_2_reg_320;
wire   [511:0] p_Result_7_fu_239_p3;
wire   [63:0] p_Result_8_fu_251_p3;
wire   [511:0] p_Result_10_fu_270_p3;
wire   [63:0] p_Result_11_fu_279_p3;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_sendWord_last_V_phi_fu_131_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_sendWord_last_V_reg_128;
reg   [0:0] ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_rs_firstWord_new_0_reg_138;
wire   [0:0] tmp_last_V_1_fu_183_p1;
reg    ap_block_pp0_stage0_01001;
wire   [49:0] p_Result_9_fu_191_p4;
wire   [111:0] trunc_ln674_fu_236_p1;
wire   [399:0] grp_fu_149_p4;
wire   [13:0] trunc_ln674_1_fu_248_p1;
wire   [49:0] grp_fu_158_p4;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_input_r_V_data_V_U_apdone_blk;
wire   [511:0] input_r_TDATA_int_regslice;
wire    input_r_TVALID_int_regslice;
reg    input_r_TREADY_int_regslice;
wire    regslice_both_input_r_V_data_V_U_ack_in;
wire    regslice_both_input_r_V_keep_V_U_apdone_blk;
wire   [63:0] input_r_TKEEP_int_regslice;
wire    regslice_both_input_r_V_keep_V_U_vld_out;
wire    regslice_both_input_r_V_keep_V_U_ack_in;
wire    regslice_both_input_r_V_strb_V_U_apdone_blk;
wire   [63:0] input_r_TSTRB_int_regslice;
wire    regslice_both_input_r_V_strb_V_U_vld_out;
wire    regslice_both_input_r_V_strb_V_U_ack_in;
wire    regslice_both_input_r_V_last_V_U_apdone_blk;
wire   [0:0] input_r_TLAST_int_regslice;
wire    regslice_both_input_r_V_last_V_U_vld_out;
wire    regslice_both_input_r_V_last_V_U_ack_in;
reg   [511:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_V_data_V_U_vld_out;
wire    regslice_both_output_r_V_keep_V_U_apdone_blk;
reg   [63:0] output_r_TKEEP_int_regslice;
wire    regslice_both_output_r_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_keep_V_U_vld_out;
wire    regslice_both_output_r_V_strb_V_U_apdone_blk;
reg   [63:0] output_r_TSTRB_int_regslice;
wire    regslice_both_output_r_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_strb_V_U_vld_out;
wire    regslice_both_output_r_V_last_V_U_apdone_blk;
reg   [0:0] output_r_TLAST_int_regslice;
wire    regslice_both_output_r_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_r_V_last_V_U_vld_out;
reg    ap_condition_179;
reg    ap_condition_164;
reg    ap_condition_206;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 fsmState = 1'd0;
#0 prevWord_data_V = 512'd0;
#0 prevWord_keep_V = 64'd0;
#0 rs_firstWord = 1'd1;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

cut_packet_regslice_both #(
    .DataWidth( 512 ))
regslice_both_input_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TDATA),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_data_V_U_ack_in),
    .data_out(input_r_TDATA_int_regslice),
    .vld_out(input_r_TVALID_int_regslice),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_data_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 64 ))
regslice_both_input_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TKEEP),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_keep_V_U_ack_in),
    .data_out(input_r_TKEEP_int_regslice),
    .vld_out(regslice_both_input_r_V_keep_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_keep_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 64 ))
regslice_both_input_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TSTRB),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_strb_V_U_ack_in),
    .data_out(input_r_TSTRB_int_regslice),
    .vld_out(regslice_both_input_r_V_strb_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_strb_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 1 ))
regslice_both_input_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(input_r_TLAST),
    .vld_in(input_r_TVALID),
    .ack_in(regslice_both_input_r_V_last_V_U_ack_in),
    .data_out(input_r_TLAST_int_regslice),
    .vld_out(regslice_both_input_r_V_last_V_U_vld_out),
    .ack_out(input_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_input_r_V_last_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 512 ))
regslice_both_output_r_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_V_data_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_data_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 64 ))
regslice_both_output_r_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TKEEP_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_keep_V_U_ack_in_dummy),
    .data_out(output_r_TKEEP),
    .vld_out(regslice_both_output_r_V_keep_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_keep_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 64 ))
regslice_both_output_r_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TSTRB_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_strb_V_U_ack_in_dummy),
    .data_out(output_r_TSTRB),
    .vld_out(regslice_both_output_r_V_strb_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_strb_V_U_apdone_blk)
);

cut_packet_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_r_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_r_TLAST_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(regslice_both_output_r_V_last_V_U_ack_in_dummy),
    .data_out(output_r_TLAST),
    .vld_out(regslice_both_output_r_V_last_V_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        fsmState <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_164)) begin
            if ((fsmState_load_load_fu_167_p1 == 1'd1)) begin
                fsmState <= 1'd0;
            end else if ((1'b1 == ap_condition_179)) begin
                fsmState <= 1'd1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prevWord_data_V <= 512'd0;
    end else begin
        if (((tmp_reg_292 == 1'd1) & (fsmState_load_reg_288 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            prevWord_data_V <= tmp_data_V_3_reg_296;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        prevWord_keep_V <= 64'd0;
    end else begin
        if (((tmp_reg_292 == 1'd1) & (fsmState_load_reg_288 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            prevWord_keep_V <= tmp_keep_V_3_reg_302;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fsmState_load_reg_288 <= fsmState;
        fsmState_load_reg_288_pp0_iter1_reg <= fsmState_load_reg_288;
        rs_firstWord_load_reg_316_pp0_iter1_reg <= rs_firstWord_load_reg_316;
        tmp_reg_292_pp0_iter1_reg <= tmp_reg_292;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fsmState == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        rs_firstWord <= ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fsmState == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rs_firstWord_load_reg_316 <= rs_firstWord;
        tmp_data_V_3_reg_296 <= input_r_TDATA_int_regslice;
        tmp_keep_V_3_reg_302 <= input_r_TKEEP_int_regslice;
        tmp_strb_V_reg_308 <= input_r_TSTRB_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fsmState == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (rs_firstWord_load_load_fu_187_p1 == 1'd0))) begin
        sendWord_last_V_2_reg_320 <= sendWord_last_V_2_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (fsmState == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_292 <= tmp_nbreadreq_fu_84_p6;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (fsmState == 1'd0))) begin
        if ((tmp_last_V_1_fu_183_p1 == 1'd0)) begin
            ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4 = 1'd0;
        end else if ((tmp_last_V_1_fu_183_p1 == 1'd1)) begin
            ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4 = 1'd1;
        end else begin
            ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_new_0_reg_138;
        end
    end else begin
        ap_phi_mux_rs_firstWord_new_0_phi_fu_141_p4 = ap_phi_reg_pp0_iter0_rs_firstWord_new_0_reg_138;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (fsmState == 1'd0))) begin
        if ((rs_firstWord_load_load_fu_187_p1 == 1'd1)) begin
            ap_phi_mux_sendWord_last_V_phi_fu_131_p4 = 1'd0;
        end else if ((rs_firstWord_load_load_fu_187_p1 == 1'd0)) begin
            ap_phi_mux_sendWord_last_V_phi_fu_131_p4 = sendWord_last_V_2_fu_201_p2;
        end else begin
            ap_phi_mux_sendWord_last_V_phi_fu_131_p4 = ap_phi_reg_pp0_iter0_sendWord_last_V_reg_128;
        end
    end else begin
        ap_phi_mux_sendWord_last_V_phi_fu_131_p4 = ap_phi_reg_pp0_iter0_sendWord_last_V_reg_128;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((tmp_nbreadreq_fu_84_p6 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (fsmState == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        input_r_TDATA_blk_n = input_r_TVALID_int_regslice;
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op8_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        input_r_TREADY_int_regslice = 1'b1;
    end else begin
        input_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((fsmState_load_reg_288 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((rs_firstWord_load_reg_316_pp0_iter1_reg == 1'd0) & (tmp_reg_292_pp0_iter1_reg == 1'd1) & (fsmState_load_reg_288_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((rs_firstWord_load_reg_316 == 1'd0) & (tmp_reg_292 == 1'd1) & (fsmState_load_reg_288 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((fsmState_load_reg_288 == 1'd1)) begin
            output_r_TDATA_int_regslice = p_Result_10_fu_270_p3;
        end else if ((ap_predicate_op53_write_state2 == 1'b1)) begin
            output_r_TDATA_int_regslice = p_Result_7_fu_239_p3;
        end else begin
            output_r_TDATA_int_regslice = 'bx;
        end
    end else begin
        output_r_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((fsmState_load_reg_288 == 1'd1)) begin
            output_r_TKEEP_int_regslice = p_Result_11_fu_279_p3;
        end else if ((ap_predicate_op53_write_state2 == 1'b1)) begin
            output_r_TKEEP_int_regslice = p_Result_8_fu_251_p3;
        end else begin
            output_r_TKEEP_int_regslice = 'bx;
        end
    end else begin
        output_r_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((fsmState_load_reg_288 == 1'd1)) begin
            output_r_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op53_write_state2 == 1'b1)) begin
            output_r_TLAST_int_regslice = sendWord_last_V_2_reg_320;
        end else begin
            output_r_TLAST_int_regslice = 'bx;
        end
    end else begin
        output_r_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_206)) begin
        if ((fsmState_load_reg_288 == 1'd1)) begin
            output_r_TSTRB_int_regslice = 64'd0;
        end else if ((ap_predicate_op53_write_state2 == 1'b1)) begin
            output_r_TSTRB_int_regslice = tmp_strb_V_reg_308;
        end else begin
            output_r_TSTRB_int_regslice = 'bx;
        end
    end else begin
        output_r_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op53_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((fsmState_load_reg_288 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op8_read_state1 == 1'b1) & (1'b1 == 1'b1) & (input_r_TVALID_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op53_write_state2 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)) | ((fsmState_load_reg_288 == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op8_read_state1 == 1'b1) & (1'b1 == 1'b1) & (input_r_TVALID_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op53_write_state2 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)) | ((fsmState_load_reg_288 == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op8_read_state1 == 1'b1) & (1'b1 == 1'b1) & (input_r_TVALID_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op53_write_state2 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)) | ((fsmState_load_reg_288 == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_predicate_op8_read_state1 == 1'b1) & (input_r_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op53_write_state2 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)) | ((fsmState_load_reg_288 == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op53_write_state2 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)) | ((fsmState_load_reg_288 == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_output_r_V_data_V_U_apdone_blk == 1'b1) | ((fsmState_load_reg_288_pp0_iter1_reg == 1'd1) & (output_r_TREADY_int_regslice == 1'b0)) | ((output_r_TREADY_int_regslice == 1'b0) & (ap_predicate_op61_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_164 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_179 = ((tmp_nbreadreq_fu_84_p6 == 1'd1) & (fsmState == 1'd0) & (tmp_last_V_1_fu_183_p1 == 1'd1) & (ap_phi_mux_sendWord_last_V_phi_fu_131_p4 == 1'd0));
end

always @ (*) begin
    ap_condition_206 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);


assign ap_local_deadlock = 1'b0;

assign ap_phi_reg_pp0_iter0_rs_firstWord_new_0_reg_138 = 'bx;

assign ap_phi_reg_pp0_iter0_sendWord_last_V_reg_128 = 'bx;

always @ (*) begin
    ap_predicate_op53_write_state2 = ((rs_firstWord_load_reg_316 == 1'd0) & (tmp_reg_292 == 1'd1) & (fsmState_load_reg_288 == 1'd0));
end

always @ (*) begin
    ap_predicate_op61_write_state3 = ((rs_firstWord_load_reg_316_pp0_iter1_reg == 1'd0) & (tmp_reg_292_pp0_iter1_reg == 1'd1) & (fsmState_load_reg_288_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op8_read_state1 = ((tmp_nbreadreq_fu_84_p6 == 1'd1) & (fsmState == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign fsmState_load_load_fu_167_p1 = fsmState;

assign grp_fu_149_p4 = {{prevWord_data_V[511:112]}};

assign grp_fu_158_p4 = {{prevWord_keep_V[63:14]}};

assign input_r_TREADY = regslice_both_input_r_V_data_V_U_ack_in;

assign output_r_TVALID = regslice_both_output_r_V_data_V_U_vld_out;

assign p_Result_10_fu_270_p3 = {{112'd0}, {grp_fu_149_p4}};

assign p_Result_11_fu_279_p3 = {{14'd0}, {grp_fu_158_p4}};

assign p_Result_7_fu_239_p3 = {{trunc_ln674_fu_236_p1}, {grp_fu_149_p4}};

assign p_Result_8_fu_251_p3 = {{trunc_ln674_1_fu_248_p1}, {grp_fu_158_p4}};

assign p_Result_9_fu_191_p4 = {{input_r_TKEEP_int_regslice[63:14]}};

assign rs_firstWord_load_load_fu_187_p1 = rs_firstWord;

assign sendWord_last_V_2_fu_201_p2 = ((p_Result_9_fu_191_p4 == 50'd0) ? 1'b1 : 1'b0);

assign tmp_last_V_1_fu_183_p1 = input_r_TLAST_int_regslice;

assign tmp_nbreadreq_fu_84_p6 = input_r_TVALID_int_regslice;

assign trunc_ln674_1_fu_248_p1 = tmp_keep_V_3_reg_302[13:0];

assign trunc_ln674_fu_236_p1 = tmp_data_V_3_reg_296[111:0];


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "cut_packet_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //cut_packet

