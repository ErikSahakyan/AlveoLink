// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="inputSizeInBytes_inputSizeInBytes,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.267000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=706,HLS_SYN_LUT=731,HLS_VERSION=2020_2}" *)

module inputSizeInBytes (
        ap_clk,
        ap_rst_n,
        inputPacket_TDATA,
        inputPacket_TVALID,
        inputPacket_TREADY,
        inputPacket_TKEEP,
        inputPacket_TSTRB,
        inputPacket_TLAST,
        inputPacket_TDEST,
        outputPacket_TDATA,
        outputPacket_TVALID,
        outputPacket_TREADY,
        outputPacket_TKEEP,
        outputPacket_TSTRB,
        outputPacket_TLAST,
        outputPacket_TDEST,
        packetSize_V_TDATA,
        packetSize_V_TVALID,
        packetSize_V_TREADY
);

parameter    ap_ST_iter0_fsm_state1 = 1'd1;
parameter    ap_ST_iter1_fsm_state2 = 2'd2;
parameter    ap_ST_iter2_fsm_state3 = 2'd2;
parameter    ap_ST_iter1_fsm_state0 = 2'd1;
parameter    ap_ST_iter2_fsm_state0 = 2'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] inputPacket_TDATA;
input   inputPacket_TVALID;
output   inputPacket_TREADY;
input  [63:0] inputPacket_TKEEP;
input  [63:0] inputPacket_TSTRB;
input  [0:0] inputPacket_TLAST;
input  [12:0] inputPacket_TDEST;
output  [511:0] outputPacket_TDATA;
output   outputPacket_TVALID;
input   outputPacket_TREADY;
output  [63:0] outputPacket_TKEEP;
output  [63:0] outputPacket_TSTRB;
output  [0:0] outputPacket_TLAST;
output  [12:0] outputPacket_TDEST;
output  [31:0] packetSize_V_TDATA;
output   packetSize_V_TVALID;
input   packetSize_V_TREADY;

 reg    ap_rst_n_inv;
reg   [31:0] size;
reg    inputPacket_TDATA_blk_n;
reg   [0:0] ap_CS_iter0_fsm;
wire    ap_CS_iter0_fsm_state1;
reg   [1:0] ap_CS_iter1_fsm;
wire    ap_CS_iter1_fsm_state2;
reg   [1:0] ap_CS_iter2_fsm;
wire    ap_CS_iter2_fsm_state3;
reg    outputPacket_TDATA_blk_n;
reg    packetSize_V_TDATA_blk_n;
reg   [0:0] tmp_i_last_reg_961;
wire   [0:0] tmp_i_last_reg_961_pp0_iter0_reg;
reg   [0:0] tmp_i_last_reg_961_pp0_iter1_reg;
reg   [511:0] tmp_i_data_reg_946;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    regslice_both_outputPacket_V_data_V_U_apdone_blk;
wire    regslice_both_packetSize_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
wire   [63:0] keepValue_V_fu_898_p1;
reg   [63:0] keepValue_V_reg_951;
reg   [63:0] tmp_i_strb_reg_956;
wire   [0:0] tmp_i_last_fu_906_p1;
reg   [12:0] tmp_i_dest_reg_966;
wire   [6:0] ap_phi_reg_pp0_iter0_tmp_0_reg_354;
reg   [6:0] ap_phi_reg_pp0_iter1_tmp_0_reg_354;
wire   [6:0] ap_phi_reg_pp0_iter0_tmp5_0_reg_619;
reg   [6:0] ap_phi_reg_pp0_iter1_tmp5_0_reg_619;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_887_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_884;
wire   [31:0] add_ln13_fu_922_p2;
wire   [31:0] zext_ln13_fu_918_p1;
wire   [31:0] zext_ln15_fu_929_p1;
reg   [0:0] ap_NS_iter0_fsm;
reg   [1:0] ap_NS_iter1_fsm;
reg   [1:0] ap_NS_iter2_fsm;
wire    regslice_both_inputPacket_V_data_V_U_apdone_blk;
wire   [511:0] inputPacket_TDATA_int_regslice;
wire    inputPacket_TVALID_int_regslice;
reg    inputPacket_TREADY_int_regslice;
wire    regslice_both_inputPacket_V_data_V_U_ack_in;
wire    regslice_both_inputPacket_V_keep_V_U_apdone_blk;
wire   [63:0] inputPacket_TKEEP_int_regslice;
wire    regslice_both_inputPacket_V_keep_V_U_vld_out;
wire    regslice_both_inputPacket_V_keep_V_U_ack_in;
wire    regslice_both_inputPacket_V_strb_V_U_apdone_blk;
wire   [63:0] inputPacket_TSTRB_int_regslice;
wire    regslice_both_inputPacket_V_strb_V_U_vld_out;
wire    regslice_both_inputPacket_V_strb_V_U_ack_in;
wire    regslice_both_inputPacket_V_last_V_U_apdone_blk;
wire   [0:0] inputPacket_TLAST_int_regslice;
wire    regslice_both_inputPacket_V_last_V_U_vld_out;
wire    regslice_both_inputPacket_V_last_V_U_ack_in;
wire    regslice_both_inputPacket_V_dest_V_U_apdone_blk;
wire   [12:0] inputPacket_TDEST_int_regslice;
wire    regslice_both_inputPacket_V_dest_V_U_vld_out;
wire    regslice_both_inputPacket_V_dest_V_U_ack_in;
reg    outputPacket_TVALID_int_regslice;
wire    outputPacket_TREADY_int_regslice;
wire    regslice_both_outputPacket_V_data_V_U_vld_out;
wire    regslice_both_outputPacket_V_keep_V_U_apdone_blk;
wire    regslice_both_outputPacket_V_keep_V_U_ack_in_dummy;
wire    regslice_both_outputPacket_V_keep_V_U_vld_out;
wire    regslice_both_outputPacket_V_strb_V_U_apdone_blk;
wire    regslice_both_outputPacket_V_strb_V_U_ack_in_dummy;
wire    regslice_both_outputPacket_V_strb_V_U_vld_out;
wire    regslice_both_outputPacket_V_last_V_U_apdone_blk;
wire    regslice_both_outputPacket_V_last_V_U_ack_in_dummy;
wire    regslice_both_outputPacket_V_last_V_U_vld_out;
wire    regslice_both_outputPacket_V_dest_V_U_apdone_blk;
wire    regslice_both_outputPacket_V_dest_V_U_ack_in_dummy;
wire    regslice_both_outputPacket_V_dest_V_U_vld_out;
wire   [31:0] packetSize_V_TDATA_int_regslice;
reg    packetSize_V_TVALID_int_regslice;
wire    packetSize_V_TREADY_int_regslice;
wire    regslice_both_packetSize_V_U_vld_out;
reg    ap_condition_659;
reg    ap_condition_1249;
reg    ap_condition_398;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 size = 32'd0;
#0 ap_CS_iter0_fsm = 1'd1;
#0 ap_CS_iter1_fsm = 2'd1;
#0 ap_CS_iter2_fsm = 2'd1;
end

inputSizeInBytes_regslice_both #(
    .DataWidth( 512 ))
regslice_both_inputPacket_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_TDATA),
    .vld_in(inputPacket_TVALID),
    .ack_in(regslice_both_inputPacket_V_data_V_U_ack_in),
    .data_out(inputPacket_TDATA_int_regslice),
    .vld_out(inputPacket_TVALID_int_regslice),
    .ack_out(inputPacket_TREADY_int_regslice),
    .apdone_blk(regslice_both_inputPacket_V_data_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 64 ))
regslice_both_inputPacket_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_TKEEP),
    .vld_in(inputPacket_TVALID),
    .ack_in(regslice_both_inputPacket_V_keep_V_U_ack_in),
    .data_out(inputPacket_TKEEP_int_regslice),
    .vld_out(regslice_both_inputPacket_V_keep_V_U_vld_out),
    .ack_out(inputPacket_TREADY_int_regslice),
    .apdone_blk(regslice_both_inputPacket_V_keep_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 64 ))
regslice_both_inputPacket_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_TSTRB),
    .vld_in(inputPacket_TVALID),
    .ack_in(regslice_both_inputPacket_V_strb_V_U_ack_in),
    .data_out(inputPacket_TSTRB_int_regslice),
    .vld_out(regslice_both_inputPacket_V_strb_V_U_vld_out),
    .ack_out(inputPacket_TREADY_int_regslice),
    .apdone_blk(regslice_both_inputPacket_V_strb_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 1 ))
regslice_both_inputPacket_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_TLAST),
    .vld_in(inputPacket_TVALID),
    .ack_in(regslice_both_inputPacket_V_last_V_U_ack_in),
    .data_out(inputPacket_TLAST_int_regslice),
    .vld_out(regslice_both_inputPacket_V_last_V_U_vld_out),
    .ack_out(inputPacket_TREADY_int_regslice),
    .apdone_blk(regslice_both_inputPacket_V_last_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 13 ))
regslice_both_inputPacket_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_TDEST),
    .vld_in(inputPacket_TVALID),
    .ack_in(regslice_both_inputPacket_V_dest_V_U_ack_in),
    .data_out(inputPacket_TDEST_int_regslice),
    .vld_out(regslice_both_inputPacket_V_dest_V_U_vld_out),
    .ack_out(inputPacket_TREADY_int_regslice),
    .apdone_blk(regslice_both_inputPacket_V_dest_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 512 ))
regslice_both_outputPacket_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i_data_reg_946),
    .vld_in(outputPacket_TVALID_int_regslice),
    .ack_in(outputPacket_TREADY_int_regslice),
    .data_out(outputPacket_TDATA),
    .vld_out(regslice_both_outputPacket_V_data_V_U_vld_out),
    .ack_out(outputPacket_TREADY),
    .apdone_blk(regslice_both_outputPacket_V_data_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outputPacket_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(keepValue_V_reg_951),
    .vld_in(outputPacket_TVALID_int_regslice),
    .ack_in(regslice_both_outputPacket_V_keep_V_U_ack_in_dummy),
    .data_out(outputPacket_TKEEP),
    .vld_out(regslice_both_outputPacket_V_keep_V_U_vld_out),
    .ack_out(outputPacket_TREADY),
    .apdone_blk(regslice_both_outputPacket_V_keep_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 64 ))
regslice_both_outputPacket_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i_strb_reg_956),
    .vld_in(outputPacket_TVALID_int_regslice),
    .ack_in(regslice_both_outputPacket_V_strb_V_U_ack_in_dummy),
    .data_out(outputPacket_TSTRB),
    .vld_out(regslice_both_outputPacket_V_strb_V_U_vld_out),
    .ack_out(outputPacket_TREADY),
    .apdone_blk(regslice_both_outputPacket_V_strb_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 1 ))
regslice_both_outputPacket_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i_last_reg_961),
    .vld_in(outputPacket_TVALID_int_regslice),
    .ack_in(regslice_both_outputPacket_V_last_V_U_ack_in_dummy),
    .data_out(outputPacket_TLAST),
    .vld_out(regslice_both_outputPacket_V_last_V_U_vld_out),
    .ack_out(outputPacket_TREADY),
    .apdone_blk(regslice_both_outputPacket_V_last_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 13 ))
regslice_both_outputPacket_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_i_dest_reg_966),
    .vld_in(outputPacket_TVALID_int_regslice),
    .ack_in(regslice_both_outputPacket_V_dest_V_U_ack_in_dummy),
    .data_out(outputPacket_TDEST),
    .vld_out(regslice_both_outputPacket_V_dest_V_U_vld_out),
    .ack_out(outputPacket_TREADY),
    .apdone_blk(regslice_both_outputPacket_V_dest_V_U_apdone_blk)
);

inputSizeInBytes_regslice_both #(
    .DataWidth( 32 ))
regslice_both_packetSize_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(packetSize_V_TDATA_int_regslice),
    .vld_in(packetSize_V_TVALID_int_regslice),
    .ack_in(packetSize_V_TREADY_int_regslice),
    .data_out(packetSize_V_TDATA),
    .vld_out(regslice_both_packetSize_V_U_vld_out),
    .ack_out(packetSize_V_TREADY),
    .apdone_blk(regslice_both_packetSize_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
    end else begin
        ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
    end else begin
        ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_iter2_fsm <= ap_ST_iter2_fsm_state0;
    end else begin
        ap_CS_iter2_fsm <= ap_NS_iter2_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1249)) begin
        if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd1;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd3))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd2;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd7))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd3;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd15))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd4;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd31))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd5;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd63))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd6;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd127))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd7;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd255))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd8;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd511))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd9;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1023))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd10;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2047))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd11;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4095))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd12;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd8191))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd13;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd16383))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd14;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd32767))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd15;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd65535))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd16;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd131071))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd17;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd262143))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd18;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd524287))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd19;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1048575))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd20;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2097151))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd21;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4194303))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd22;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd8388607))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd23;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd16777215))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd24;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd33554431))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd25;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd67108863))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd26;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd134217727))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd27;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd268435455))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd28;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd536870911))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd29;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1073741823))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd30;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2147483647))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd31;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4294967295))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd32;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd8589934591))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd33;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd17179869183))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd34;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd34359738367))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd35;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd68719476735))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd36;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd137438953471))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd37;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd274877906943))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd38;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd549755813887))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd39;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1099511627775))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd40;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2199023255551))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd41;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4398046511103))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd42;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd8796093022207))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd43;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd17592186044415))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd44;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd35184372088831))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd45;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd70368744177663))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd46;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd140737488355327))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd47;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd281474976710655))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd48;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd562949953421311))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd49;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1125899906842623))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd50;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2251799813685247))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd51;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4503599627370495))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd52;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd9007199254740991))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd53;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd18014398509481983))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd54;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd36028797018963967))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd55;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd72057594037927935))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd56;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd144115188075855871))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd57;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd288230376151711743))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd58;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd576460752303423487))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd59;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd1152921504606846975))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd60;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd2305843009213693951))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd61;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd4611686018427387903))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd62;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd9223372036854775807))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd63;
        end else if (((tmp_i_last_fu_906_p1 == 1'd1) & (keepValue_V_fu_898_p1 == 64'd18446744073709551615))) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd64;
        end else if ((1'b1 == ap_condition_659)) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= 7'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp5_0_reg_619 <= ap_phi_reg_pp0_iter0_tmp5_0_reg_619;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1249)) begin
        if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd1;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd3))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd2;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd7))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd3;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd15))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd4;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd31))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd5;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd63))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd6;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd127))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd7;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd255))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd8;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd511))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd9;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1023))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd10;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2047))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd11;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4095))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd12;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd8191))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd13;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd16383))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd14;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd32767))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd15;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd65535))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd16;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd131071))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd17;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd262143))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd18;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd524287))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd19;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1048575))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd20;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2097151))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd21;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4194303))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd22;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd8388607))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd23;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd16777215))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd24;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd33554431))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd25;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd67108863))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd26;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd134217727))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd27;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd268435455))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd28;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd536870911))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd29;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1073741823))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd30;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2147483647))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd31;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4294967295))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd32;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd8589934591))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd33;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd17179869183))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd34;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd34359738367))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd35;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd68719476735))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd36;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd137438953471))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd37;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd274877906943))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd38;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd549755813887))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd39;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1099511627775))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd40;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2199023255551))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd41;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4398046511103))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd42;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd8796093022207))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd43;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd17592186044415))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd44;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd35184372088831))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd45;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd70368744177663))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd46;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd140737488355327))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd47;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd281474976710655))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd48;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd562949953421311))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd49;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1125899906842623))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd50;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2251799813685247))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd51;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4503599627370495))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd52;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd9007199254740991))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd53;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd18014398509481983))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd54;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd36028797018963967))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd55;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd72057594037927935))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd56;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd144115188075855871))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd57;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd288230376151711743))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd58;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd576460752303423487))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd59;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd1152921504606846975))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd60;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd2305843009213693951))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd61;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd4611686018427387903))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd62;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd9223372036854775807))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd63;
        end else if (((tmp_i_last_fu_906_p1 == 1'd0) & (keepValue_V_fu_898_p1 == 64'd18446744073709551615))) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd64;
        end else if ((1'b1 == ap_condition_398)) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= 7'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_0_reg_354 <= ap_phi_reg_pp0_iter0_tmp_0_reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((inputPacket_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        keepValue_V_reg_951 <= inputPacket_TKEEP_int_regslice;
        tmp_i_data_reg_946 <= inputPacket_TDATA_int_regslice;
        tmp_i_dest_reg_966 <= inputPacket_TDEST_int_regslice;
        tmp_i_last_reg_961 <= inputPacket_TLAST_int_regslice;
        tmp_i_strb_reg_956 <= inputPacket_TSTRB_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        size <= ap_phi_mux_storemerge_phi_fu_887_p4;
        tmp_i_last_reg_961_pp0_iter1_reg <= tmp_i_last_reg_961;
    end
end

always @ (*) begin
    if ((tmp_i_last_reg_961_pp0_iter0_reg == 1'd0)) begin
        ap_phi_mux_storemerge_phi_fu_887_p4 = add_ln13_fu_922_p2;
    end else if ((tmp_i_last_reg_961 == 1'd1)) begin
        ap_phi_mux_storemerge_phi_fu_887_p4 = 32'd0;
    end else begin
        ap_phi_mux_storemerge_phi_fu_887_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_884;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_iter0_fsm_state1)) begin
        inputPacket_TDATA_blk_n = inputPacket_TVALID_int_regslice;
    end else begin
        inputPacket_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((inputPacket_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
        inputPacket_TREADY_int_regslice = 1'b1;
    end else begin
        inputPacket_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_iter2_fsm_state3) | (1'b1 == ap_CS_iter1_fsm_state2))) begin
        outputPacket_TDATA_blk_n = outputPacket_TREADY_int_regslice;
    end else begin
        outputPacket_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        outputPacket_TVALID_int_regslice = 1'b1;
    end else begin
        outputPacket_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_iter2_fsm_state3)) | ((tmp_i_last_reg_961 == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2)))) begin
        packetSize_V_TDATA_blk_n = packetSize_V_TREADY_int_regslice;
    end else begin
        packetSize_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (tmp_i_last_reg_961 == 1'd1) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
        packetSize_V_TVALID_int_regslice = 1'b1;
    end else begin
        packetSize_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_iter0_fsm)
        ap_ST_iter0_fsm_state1 : begin
            ap_NS_iter0_fsm = ap_ST_iter0_fsm_state1;
        end
        default : begin
            ap_NS_iter0_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter1_fsm)
        ap_ST_iter1_fsm_state2 : begin
            if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (inputPacket_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & ((1'b0 == ap_CS_iter0_fsm_state1) | ((inputPacket_TVALID_int_regslice == 1'b0) & (1'b1 == ap_CS_iter0_fsm_state1))))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end
        end
        ap_ST_iter1_fsm_state0 : begin
            if ((~((inputPacket_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1))) begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state2;
            end else begin
                ap_NS_iter1_fsm = ap_ST_iter1_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter1_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    case (ap_CS_iter2_fsm)
        ap_ST_iter2_fsm_state3 : begin
            if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))) & ~((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else if ((~((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))) & ((1'b0 == ap_CS_iter1_fsm_state2) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end
        end
        ap_ST_iter2_fsm_state0 : begin
            if ((~((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter1_fsm_state2))) begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state3;
            end else begin
                ap_NS_iter2_fsm = ap_ST_iter2_fsm_state0;
            end
        end
        default : begin
            ap_NS_iter2_fsm = 'bx;
        end
    endcase
end

assign add_ln13_fu_922_p2 = (size + zext_ln13_fu_918_p1);

assign ap_CS_iter0_fsm_state1 = ap_CS_iter0_fsm[32'd0];

assign ap_CS_iter1_fsm_state2 = ap_CS_iter1_fsm[32'd1];

assign ap_CS_iter2_fsm_state3 = ap_CS_iter2_fsm[32'd1];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (inputPacket_TVALID_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state2_io = ((outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1249 = (~((inputPacket_TVALID_int_regslice == 1'b0) | ((1'b1 == ap_CS_iter2_fsm_state3) & ((regslice_both_packetSize_V_U_apdone_blk == 1'b1) | (regslice_both_outputPacket_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961_pp0_iter1_reg == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == ap_CS_iter1_fsm_state2) & ((1'b1 == ap_block_state2_io) | (outputPacket_TREADY_int_regslice == 1'b0) | ((tmp_i_last_reg_961 == 1'd1) & (packetSize_V_TREADY_int_regslice == 1'b0))))) & (1'b1 == ap_CS_iter0_fsm_state1));
end

always @ (*) begin
    ap_condition_398 = (~(keepValue_V_fu_898_p1 == 64'd18446744073709551615) & ~(keepValue_V_fu_898_p1 == 64'd9223372036854775807) & ~(keepValue_V_fu_898_p1 == 64'd4611686018427387903) & ~(keepValue_V_fu_898_p1 == 64'd2305843009213693951) & ~(keepValue_V_fu_898_p1 == 64'd1152921504606846975) & ~(keepValue_V_fu_898_p1 == 64'd576460752303423487) & ~(keepValue_V_fu_898_p1 == 64'd288230376151711743) & ~(keepValue_V_fu_898_p1 == 64'd144115188075855871) & ~(keepValue_V_fu_898_p1 == 64'd72057594037927935) & ~(keepValue_V_fu_898_p1 == 64'd36028797018963967) & ~(keepValue_V_fu_898_p1 == 64'd18014398509481983) & ~(keepValue_V_fu_898_p1 == 64'd9007199254740991) & ~(keepValue_V_fu_898_p1 == 64'd4503599627370495) & ~(keepValue_V_fu_898_p1 == 64'd2251799813685247) & ~(keepValue_V_fu_898_p1 == 64'd1125899906842623) & ~(keepValue_V_fu_898_p1 == 64'd562949953421311) & ~(keepValue_V_fu_898_p1 == 64'd281474976710655) & ~(keepValue_V_fu_898_p1 == 64'd140737488355327) & ~(keepValue_V_fu_898_p1 == 64'd70368744177663) & ~(keepValue_V_fu_898_p1 == 64'd35184372088831) & ~(keepValue_V_fu_898_p1 == 64'd17592186044415) & ~(keepValue_V_fu_898_p1 == 64'd8796093022207) & ~(keepValue_V_fu_898_p1 == 64'd4398046511103) & ~(keepValue_V_fu_898_p1 == 64'd2199023255551) & ~(keepValue_V_fu_898_p1 == 64'd1099511627775) & ~(keepValue_V_fu_898_p1 == 64'd549755813887) & ~(keepValue_V_fu_898_p1 == 64'd274877906943) & ~(keepValue_V_fu_898_p1 == 64'd137438953471) & ~(keepValue_V_fu_898_p1 == 64'd68719476735) & ~(keepValue_V_fu_898_p1 == 64'd34359738367) & ~(keepValue_V_fu_898_p1 == 64'd17179869183) & ~(keepValue_V_fu_898_p1 == 64'd8589934591) & ~(keepValue_V_fu_898_p1 == 64'd4294967295) & ~(keepValue_V_fu_898_p1 == 64'd2147483647) & ~(keepValue_V_fu_898_p1 == 64'd1073741823) & ~(keepValue_V_fu_898_p1 == 64'd536870911) & ~(keepValue_V_fu_898_p1 == 64'd268435455) & ~(keepValue_V_fu_898_p1 == 64'd134217727) & ~(keepValue_V_fu_898_p1 == 64'd67108863) & ~(keepValue_V_fu_898_p1 == 64'd33554431) & ~(keepValue_V_fu_898_p1 == 64'd16777215) & ~(keepValue_V_fu_898_p1 == 64'd8388607) & ~(keepValue_V_fu_898_p1 == 64'd4194303) & ~(keepValue_V_fu_898_p1 == 64'd2097151) & ~(keepValue_V_fu_898_p1 == 64'd1048575) & ~(keepValue_V_fu_898_p1 == 64'd524287) & ~(keepValue_V_fu_898_p1 == 64'd262143) & ~(keepValue_V_fu_898_p1 == 64'd131071) & ~(keepValue_V_fu_898_p1 == 64'd65535) & ~(keepValue_V_fu_898_p1 == 64'd32767) & ~(keepValue_V_fu_898_p1 == 64'd16383) & ~(keepValue_V_fu_898_p1 == 64'd8191) & ~(keepValue_V_fu_898_p1 == 64'd4095) & ~(keepValue_V_fu_898_p1 == 64'd2047) & ~(keepValue_V_fu_898_p1 == 64'd1023) & ~(keepValue_V_fu_898_p1 == 64'd511) & ~(keepValue_V_fu_898_p1 == 64'd255) & ~(keepValue_V_fu_898_p1 == 64'd127) & ~(keepValue_V_fu_898_p1 == 64'd63) & ~(keepValue_V_fu_898_p1 == 64'd31) & ~(keepValue_V_fu_898_p1 == 64'd15) & ~(keepValue_V_fu_898_p1 == 64'd7) & ~(keepValue_V_fu_898_p1 == 64'd3) & ~(keepValue_V_fu_898_p1 == 64'd1) & (tmp_i_last_fu_906_p1 == 1'd0));
end

always @ (*) begin
    ap_condition_659 = (~(keepValue_V_fu_898_p1 == 64'd18446744073709551615) & ~(keepValue_V_fu_898_p1 == 64'd9223372036854775807) & ~(keepValue_V_fu_898_p1 == 64'd4611686018427387903) & ~(keepValue_V_fu_898_p1 == 64'd2305843009213693951) & ~(keepValue_V_fu_898_p1 == 64'd1152921504606846975) & ~(keepValue_V_fu_898_p1 == 64'd576460752303423487) & ~(keepValue_V_fu_898_p1 == 64'd288230376151711743) & ~(keepValue_V_fu_898_p1 == 64'd144115188075855871) & ~(keepValue_V_fu_898_p1 == 64'd72057594037927935) & ~(keepValue_V_fu_898_p1 == 64'd36028797018963967) & ~(keepValue_V_fu_898_p1 == 64'd18014398509481983) & ~(keepValue_V_fu_898_p1 == 64'd9007199254740991) & ~(keepValue_V_fu_898_p1 == 64'd4503599627370495) & ~(keepValue_V_fu_898_p1 == 64'd2251799813685247) & ~(keepValue_V_fu_898_p1 == 64'd1125899906842623) & ~(keepValue_V_fu_898_p1 == 64'd562949953421311) & ~(keepValue_V_fu_898_p1 == 64'd281474976710655) & ~(keepValue_V_fu_898_p1 == 64'd140737488355327) & ~(keepValue_V_fu_898_p1 == 64'd70368744177663) & ~(keepValue_V_fu_898_p1 == 64'd35184372088831) & ~(keepValue_V_fu_898_p1 == 64'd17592186044415) & ~(keepValue_V_fu_898_p1 == 64'd8796093022207) & ~(keepValue_V_fu_898_p1 == 64'd4398046511103) & ~(keepValue_V_fu_898_p1 == 64'd2199023255551) & ~(keepValue_V_fu_898_p1 == 64'd1099511627775) & ~(keepValue_V_fu_898_p1 == 64'd549755813887) & ~(keepValue_V_fu_898_p1 == 64'd274877906943) & ~(keepValue_V_fu_898_p1 == 64'd137438953471) & ~(keepValue_V_fu_898_p1 == 64'd68719476735) & ~(keepValue_V_fu_898_p1 == 64'd34359738367) & ~(keepValue_V_fu_898_p1 == 64'd17179869183) & ~(keepValue_V_fu_898_p1 == 64'd8589934591) & ~(keepValue_V_fu_898_p1 == 64'd4294967295) & ~(keepValue_V_fu_898_p1 == 64'd2147483647) & ~(keepValue_V_fu_898_p1 == 64'd1073741823) & ~(keepValue_V_fu_898_p1 == 64'd536870911) & ~(keepValue_V_fu_898_p1 == 64'd268435455) & ~(keepValue_V_fu_898_p1 == 64'd134217727) & ~(keepValue_V_fu_898_p1 == 64'd67108863) & ~(keepValue_V_fu_898_p1 == 64'd33554431) & ~(keepValue_V_fu_898_p1 == 64'd16777215) & ~(keepValue_V_fu_898_p1 == 64'd8388607) & ~(keepValue_V_fu_898_p1 == 64'd4194303) & ~(keepValue_V_fu_898_p1 == 64'd2097151) & ~(keepValue_V_fu_898_p1 == 64'd1048575) & ~(keepValue_V_fu_898_p1 == 64'd524287) & ~(keepValue_V_fu_898_p1 == 64'd262143) & ~(keepValue_V_fu_898_p1 == 64'd131071) & ~(keepValue_V_fu_898_p1 == 64'd65535) & ~(keepValue_V_fu_898_p1 == 64'd32767) & ~(keepValue_V_fu_898_p1 == 64'd16383) & ~(keepValue_V_fu_898_p1 == 64'd8191) & ~(keepValue_V_fu_898_p1 == 64'd4095) & ~(keepValue_V_fu_898_p1 == 64'd2047) & ~(keepValue_V_fu_898_p1 == 64'd1023) & ~(keepValue_V_fu_898_p1 == 64'd511) & ~(keepValue_V_fu_898_p1 == 64'd255) & ~(keepValue_V_fu_898_p1 == 64'd127) & ~(keepValue_V_fu_898_p1 == 64'd63) & ~(keepValue_V_fu_898_p1 == 64'd31) & ~(keepValue_V_fu_898_p1 == 64'd15) & ~(keepValue_V_fu_898_p1 == 64'd7) & ~(keepValue_V_fu_898_p1 == 64'd3) & ~(keepValue_V_fu_898_p1 == 64'd1) & (tmp_i_last_fu_906_p1 == 1'd1));
end

assign ap_phi_reg_pp0_iter0_tmp5_0_reg_619 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_0_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter1_storemerge_reg_884 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign inputPacket_TREADY = regslice_both_inputPacket_V_data_V_U_ack_in;

assign keepValue_V_fu_898_p1 = inputPacket_TKEEP_int_regslice;

assign outputPacket_TVALID = regslice_both_outputPacket_V_data_V_U_vld_out;

assign packetSize_V_TDATA_int_regslice = (size + zext_ln15_fu_929_p1);

assign packetSize_V_TVALID = regslice_both_packetSize_V_U_vld_out;

assign tmp_i_last_fu_906_p1 = inputPacket_TLAST_int_regslice;

assign tmp_i_last_reg_961_pp0_iter0_reg = tmp_i_last_reg_961;

assign zext_ln13_fu_918_p1 = ap_phi_reg_pp0_iter1_tmp_0_reg_354;

assign zext_ln15_fu_929_p1 = ap_phi_reg_pp0_iter1_tmp5_0_reg_619;

endmodule //inputSizeInBytes
