// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tx_write_dev_tx_write_dev,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.256000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1603,HLS_SYN_LUT=1506,HLS_VERSION=2020_2}" *)

module tx_write_dev (
        ap_clk,
        ap_rst_n,
        data_s_TDATA,
        data_s_TVALID,
        data_s_TREADY,
        data_s_TKEEP,
        data_s_TSTRB,
        data_s_TLAST,
        header_V_TDATA,
        header_V_TVALID,
        header_V_TREADY,
        statOut_s_V_TDATA,
        statOut_s_V_TVALID,
        statOut_s_V_TREADY,
        payloadOut_s_TDATA,
        payloadOut_s_TVALID,
        payloadOut_s_TREADY,
        payloadOut_s_TKEEP,
        payloadOut_s_TSTRB,
        payloadOut_s_TLAST,
        payloadOut_s_TDEST,
        sq_frame_context_s_V_TDATA,
        sq_frame_context_s_V_TVALID,
        sq_frame_context_s_V_TREADY,
        req_rdma_udp_port_i,
        currTime,
        numberOfretranssmisionsForressetingMSN,
        headerHBM_TDATA,
        headerHBM_TVALID,
        headerHBM_TREADY,
        headerHBM_TKEEP,
        headerHBM_TSTRB,
        headerHBM_TLAST,
        headerHBM_TDEST,
        dataHBM_0_TDATA,
        dataHBM_0_TVALID,
        dataHBM_0_TREADY,
        dataHBM_0_TKEEP,
        dataHBM_0_TSTRB,
        dataHBM_0_TLAST,
        dataHBM_0_TDEST,
        dataHBM_1_TDATA,
        dataHBM_1_TVALID,
        dataHBM_1_TREADY,
        dataHBM_1_TKEEP,
        dataHBM_1_TSTRB,
        dataHBM_1_TLAST,
        dataHBM_1_TDEST,
        errorDataOut_s_TDATA,
        errorDataOut_s_TVALID,
        errorDataOut_s_TREADY,
        errorDataOut_s_TKEEP,
        errorDataOut_s_TSTRB,
        errorDataOut_s_TLAST,
        errorDataOut_s_TDEST,
        statBitMap_address_i_V_TDATA,
        statBitMap_address_i_V_TVALID,
        statBitMap_address_i_V_TREADY,
        statBitMap_data_i_V_TDATA,
        statBitMap_data_i_V_TVALID,
        statBitMap_data_i_V_TREADY,
        readPSN_l_V_TDATA,
        readPSN_l_V_TVALID,
        readPSN_l_V_TREADY,
        writePSN_l_V_TDATA,
        writePSN_l_V_TVALID,
        writePSN_l_V_TREADY,
        local_qp,
        ip_subnet
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] data_s_TDATA;
input   data_s_TVALID;
output   data_s_TREADY;
input  [63:0] data_s_TKEEP;
input  [63:0] data_s_TSTRB;
input  [0:0] data_s_TLAST;
input  [127:0] header_V_TDATA;
input   header_V_TVALID;
output   header_V_TREADY;
output  [7:0] statOut_s_V_TDATA;
output   statOut_s_V_TVALID;
input   statOut_s_V_TREADY;
output  [511:0] payloadOut_s_TDATA;
output   payloadOut_s_TVALID;
input   payloadOut_s_TREADY;
output  [63:0] payloadOut_s_TKEEP;
output  [63:0] payloadOut_s_TSTRB;
output  [0:0] payloadOut_s_TLAST;
output  [12:0] payloadOut_s_TDEST;
output  [319:0] sq_frame_context_s_V_TDATA;
output   sq_frame_context_s_V_TVALID;
input   sq_frame_context_s_V_TREADY;
input  [15:0] req_rdma_udp_port_i;
input  [63:0] currTime;
input  [15:0] numberOfretranssmisionsForressetingMSN;
output  [255:0] headerHBM_TDATA;
output   headerHBM_TVALID;
input   headerHBM_TREADY;
output  [31:0] headerHBM_TKEEP;
output  [31:0] headerHBM_TSTRB;
output  [0:0] headerHBM_TLAST;
output  [31:0] headerHBM_TDEST;
output  [255:0] dataHBM_0_TDATA;
output   dataHBM_0_TVALID;
input   dataHBM_0_TREADY;
output  [31:0] dataHBM_0_TKEEP;
output  [31:0] dataHBM_0_TSTRB;
output  [0:0] dataHBM_0_TLAST;
output  [31:0] dataHBM_0_TDEST;
output  [255:0] dataHBM_1_TDATA;
output   dataHBM_1_TVALID;
input   dataHBM_1_TREADY;
output  [31:0] dataHBM_1_TKEEP;
output  [31:0] dataHBM_1_TSTRB;
output  [0:0] dataHBM_1_TLAST;
output  [31:0] dataHBM_1_TDEST;
output  [511:0] errorDataOut_s_TDATA;
output   errorDataOut_s_TVALID;
input   errorDataOut_s_TREADY;
output  [63:0] errorDataOut_s_TKEEP;
output  [63:0] errorDataOut_s_TSTRB;
output  [0:0] errorDataOut_s_TLAST;
output  [12:0] errorDataOut_s_TDEST;
output  [23:0] statBitMap_address_i_V_TDATA;
output   statBitMap_address_i_V_TVALID;
input   statBitMap_address_i_V_TREADY;
output  [7:0] statBitMap_data_i_V_TDATA;
output   statBitMap_data_i_V_TVALID;
input   statBitMap_data_i_V_TREADY;
input  [23:0] readPSN_l_V_TDATA;
input   readPSN_l_V_TVALID;
output   readPSN_l_V_TREADY;
output  [23:0] writePSN_l_V_TDATA;
output   writePSN_l_V_TVALID;
input   writePSN_l_V_TREADY;
input  [12:0] local_qp;
input  [31:0] ip_subnet;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
reg   [2:0] state;
reg   [12:0] MSNqp_V;
reg   [63:0] writeToMSN_V;
reg   [511:0] inputPacket_l_data_V;
reg   [63:0] inputPacket_l_keep_V;
reg   [0:0] inputPacket_l_last_V;
reg   [23:0] writePSN_V;
wire   [12:0] MSN_bram_V_address0;
reg    MSN_bram_V_ce0;
wire   [62:0] MSN_bram_V_q0;
reg   [12:0] MSN_bram_V_address1;
reg    MSN_bram_V_ce1;
reg    MSN_bram_V_we1;
reg   [62:0] MSN_bram_V_d1;
wire   [12:0] reset_MSN_V_address0;
reg    reset_MSN_V_ce0;
wire   [0:0] reset_MSN_V_q0;
reg   [12:0] reset_MSN_V_address1;
reg    reset_MSN_V_ce1;
reg    reset_MSN_V_we1;
wire   [0:0] reset_MSN_V_d1;
reg   [12:0] errorDataQP_V;
reg   [25:0] addressInHBM_V;
reg    data_s_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [0:0] user_fu_728_p2;
wire   [0:0] icmp_ln76_fu_864_p2;
wire   [0:0] icmp_ln886_fu_910_p2;
wire   [0:0] icmp_ln70_fu_870_p2;
wire   [0:0] d_last_V_load_fu_655_p1;
reg    statOut_s_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] state_load_reg_1237;
reg   [0:0] p_vld_reg_1267;
reg   [0:0] user_reg_1283;
reg   [0:0] icmp_ln70_reg_1298;
reg   [0:0] icmp_ln76_reg_1294;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] state_load_reg_1237_pp0_iter1_reg;
reg   [0:0] p_vld_reg_1267_pp0_iter1_reg;
reg   [0:0] user_reg_1283_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_1298_pp0_iter1_reg;
reg   [0:0] icmp_ln76_reg_1294_pp0_iter1_reg;
reg    payloadOut_s_TDATA_blk_n;
reg   [0:0] d_last_V_reg_1255;
reg   [0:0] d_last_V_reg_1255_pp0_iter1_reg;
reg    sq_frame_context_s_V_TDATA_blk_n;
reg   [0:0] icmp_ln886_reg_1332;
reg   [0:0] icmp_ln886_reg_1332_pp0_iter1_reg;
reg    headerHBM_TDATA_blk_n;
reg    dataHBM_0_TDATA_blk_n;
reg    dataHBM_1_TDATA_blk_n;
reg    errorDataOut_s_TDATA_blk_n;
reg    statBitMap_address_i_V_TDATA_blk_n;
reg    statBitMap_data_i_V_TDATA_blk_n;
reg    readPSN_l_V_TDATA_blk_n;
reg    writePSN_l_V_TDATA_blk_n;
reg    ap_predicate_op86_read_state1;
reg    ap_predicate_op104_read_state1;
reg    ap_predicate_op171_read_state1;
reg    ap_predicate_op189_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op208_write_state2;
reg    ap_predicate_op209_write_state2;
reg    ap_predicate_op212_write_state2;
reg    ap_predicate_op213_write_state2;
reg    ap_predicate_op234_write_state2;
reg    ap_predicate_op235_write_state2;
reg    ap_predicate_op245_write_state2;
reg    ap_predicate_op248_write_state2;
reg    ap_predicate_op251_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_predicate_op254_write_state3;
reg    ap_predicate_op255_write_state3;
reg    ap_predicate_op256_write_state3;
reg    ap_predicate_op257_write_state3;
reg    ap_predicate_op259_write_state3;
reg    ap_predicate_op260_write_state3;
reg    ap_predicate_op261_write_state3;
reg    ap_predicate_op262_write_state3;
reg    ap_predicate_op263_write_state3;
wire    regslice_both_statOut_s_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_data_V_U_apdone_blk;
wire    regslice_both_sq_frame_context_s_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_data_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_data_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_data_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_data_V_U_apdone_blk;
wire    regslice_both_statBitMap_address_i_V_U_apdone_blk;
wire    regslice_both_statBitMap_data_i_V_U_apdone_blk;
wire    regslice_both_writePSN_l_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] p_Val2_1_reg_1241;
reg   [63:0] inputPacket_l_keep_V_load_reg_1249;
reg   [23:0] writePSN_V_1_reg_1260;
wire   [12:0] packetHeader_qp_V_fu_707_p4;
reg   [12:0] packetHeader_qp_V_reg_1271;
reg   [3:0] tmp_1_reg_1277;
wire   [19:0] write_r_fu_738_p1;
reg   [19:0] write_r_reg_1287;
reg   [15:0] ctx_qp_rdma_udp_port_src_reg_1302;
wire   [7:0] trunc_ln674_fu_876_p1;
reg   [7:0] trunc_ln674_reg_1307;
reg   [7:0] p_Result_6_reg_1312;
reg   [7:0] p_Result_7_reg_1317;
reg   [7:0] p_Result_8_reg_1322;
reg   [12:0] local_qp_read_reg_1327;
reg   [63:0] h_time_V_reg_1356;
reg    ap_block_pp0_stage0_subdone;
reg   [31:0] ap_phi_mux_ctx_rdma_va_high_or_ack_V_2_phi_fu_564_p4;
wire   [31:0] p_Result_10_fu_1113_p3;
reg   [31:0] ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_2_reg_561;
wire   [31:0] ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_2_reg_561;
reg   [31:0] ap_phi_mux_ctx_rdma_va_low_V_2_phi_fu_573_p4;
wire   [31:0] ctx_rdma_va_low_V_fu_1098_p1;
reg   [31:0] ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_2_reg_570;
wire   [31:0] ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_2_reg_570;
wire   [63:0] zext_ln534_1_fu_664_p1;
wire   [63:0] zext_ln534_fu_675_p1;
wire   [63:0] zext_ln534_2_fu_948_p1;
wire   [63:0] add_ln691_1_fu_1086_p2;
reg   [63:0] ap_sig_allocacmp_p_Val2_s;
wire   [23:0] add_ln691_2_fu_960_p2;
wire   [25:0] add_ln691_fu_1015_p2;
wire   [25:0] add_ln691_3_fu_1225_p2;
wire   [0:0] header_V_read_nbread_fu_312_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [62:0] trunc_ln208_1_fu_659_p1;
wire   [62:0] trunc_ln208_fu_670_p1;
wire   [1:0] packetHeader_type_V_fu_693_p1;
wire   [19:0] read_r_fu_734_p1;
wire   [20:0] or_ln_fu_762_p3;
wire   [21:0] zext_ln1347_2_fu_770_p1;
wire   [21:0] zext_ln44_1_fu_778_p1;
wire   [20:0] or_ln1_fu_788_p3;
wire   [21:0] zext_ln46_fu_796_p1;
wire   [21:0] zext_ln1347_fu_754_p1;
wire   [20:0] zext_ln1347_1_fu_758_p1;
wire   [20:0] zext_ln44_fu_774_p1;
wire   [20:0] ret_fu_806_p2;
wire   [0:0] icmp_ln878_fu_742_p2;
wire   [0:0] icmp_ln878_1_fu_748_p2;
wire   [0:0] xor_ln878_fu_822_p2;
wire   [0:0] and_ln878_1_fu_828_p2;
wire   [21:0] sub_ln44_fu_782_p2;
wire   [21:0] sub_ln46_fu_800_p2;
wire   [0:0] and_ln878_fu_816_p2;
wire  signed [21:0] sext_ln878_fu_812_p1;
wire   [0:0] xor_ln878_1_fu_842_p2;
wire   [21:0] select_ln878_fu_834_p3;
wire   [21:0] select_ln878_1_fu_848_p3;
wire   [21:0] select_ln878_2_fu_856_p3;
wire   [15:0] packetHeader_numberOfRetranssmitions_V_fu_697_p4;
wire   [26:0] zext_ln130_fu_990_p1;
wire   [26:0] headerToHBM_dest_V_1_fu_1004_p2;
wire   [31:0] p_Result_5_fu_1027_p5;
wire   [31:0] zext_ln208_fu_1035_p1;
wire   [31:0] val_V_1_fu_1038_p2;
wire   [63:0] p_Result_s_17_fu_1078_p3;
wire   [30:0] p_Result_1_fu_1103_p4;
wire   [174:0] p_Result_11_fu_1126_p8;
wire   [29:0] shl_ln_fu_1145_p3;
wire   [24:0] shl_ln1345_1_fu_1156_p3;
wire   [30:0] zext_ln1345_fu_1152_p1;
wire   [30:0] zext_ln1345_1_fu_1163_p1;
wire   [30:0] ret_1_fu_1167_p2;
wire   [25:0] HBMaddress_V_fu_1173_p4;
wire   [7:0] trunc_ln674_1_fu_1044_p1;
wire   [7:0] p_Result_4_fu_1048_p4;
wire   [7:0] p_Result_9_fu_1058_p4;
wire   [7:0] p_Result_s_fu_1068_p4;
wire   [319:0] tmp7_fu_1188_p16;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_data_s_V_data_V_U_apdone_blk;
wire   [511:0] data_s_TDATA_int_regslice;
wire    data_s_TVALID_int_regslice;
reg    data_s_TREADY_int_regslice;
wire    regslice_both_data_s_V_data_V_U_ack_in;
wire    regslice_both_data_s_V_keep_V_U_apdone_blk;
wire   [63:0] data_s_TKEEP_int_regslice;
wire    regslice_both_data_s_V_keep_V_U_vld_out;
wire    regslice_both_data_s_V_keep_V_U_ack_in;
wire    regslice_both_data_s_V_strb_V_U_apdone_blk;
wire   [63:0] data_s_TSTRB_int_regslice;
wire    regslice_both_data_s_V_strb_V_U_vld_out;
wire    regslice_both_data_s_V_strb_V_U_ack_in;
wire    regslice_both_data_s_V_last_V_U_apdone_blk;
wire   [0:0] data_s_TLAST_int_regslice;
wire    regslice_both_data_s_V_last_V_U_vld_out;
wire    regslice_both_data_s_V_last_V_U_ack_in;
wire    regslice_both_header_V_U_apdone_blk;
wire   [127:0] header_V_TDATA_int_regslice;
wire    header_V_TVALID_int_regslice;
reg    header_V_TREADY_int_regslice;
wire    regslice_both_header_V_U_ack_in;
reg    statOut_s_V_TVALID_int_regslice;
wire    statOut_s_V_TREADY_int_regslice;
wire    regslice_both_statOut_s_V_U_vld_out;
reg    payloadOut_s_TVALID_int_regslice;
wire    payloadOut_s_TREADY_int_regslice;
wire    regslice_both_payloadOut_s_V_data_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_keep_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_keep_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_keep_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_strb_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_strb_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_strb_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_last_V_U_apdone_blk;
reg   [0:0] payloadOut_s_TLAST_int_regslice;
wire    regslice_both_payloadOut_s_V_last_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_last_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_dest_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_dest_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_dest_V_U_vld_out;
wire   [319:0] sq_frame_context_s_V_TDATA_int_regslice;
reg    sq_frame_context_s_V_TVALID_int_regslice;
wire    sq_frame_context_s_V_TREADY_int_regslice;
wire    regslice_both_sq_frame_context_s_V_U_vld_out;
wire   [255:0] headerHBM_TDATA_int_regslice;
reg    headerHBM_TVALID_int_regslice;
wire    headerHBM_TREADY_int_regslice;
wire    regslice_both_headerHBM_V_data_V_U_vld_out;
wire    regslice_both_headerHBM_V_keep_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_keep_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_keep_V_U_vld_out;
wire    regslice_both_headerHBM_V_strb_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_strb_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_strb_V_U_vld_out;
wire    regslice_both_headerHBM_V_last_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_last_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_last_V_U_vld_out;
wire    regslice_both_headerHBM_V_dest_V_U_apdone_blk;
wire   [31:0] headerHBM_TDEST_int_regslice;
wire    regslice_both_headerHBM_V_dest_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_dest_V_U_vld_out;
wire   [255:0] dataHBM_0_TDATA_int_regslice;
reg    dataHBM_0_TVALID_int_regslice;
wire    dataHBM_0_TREADY_int_regslice;
wire    regslice_both_dataHBM_0_V_data_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_keep_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_keep_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_strb_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_strb_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_last_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_last_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_dest_V_U_apdone_blk;
wire   [31:0] dataHBM_0_TDEST_int_regslice;
wire    regslice_both_dataHBM_0_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_dest_V_U_vld_out;
wire   [255:0] dataHBM_1_TDATA_int_regslice;
reg    dataHBM_1_TVALID_int_regslice;
wire    dataHBM_1_TREADY_int_regslice;
wire    regslice_both_dataHBM_1_V_data_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_keep_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_keep_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_strb_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_strb_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_last_V_U_apdone_blk;
reg   [0:0] dataHBM_1_TLAST_int_regslice;
wire    regslice_both_dataHBM_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_last_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_dest_V_U_apdone_blk;
wire   [31:0] dataHBM_1_TDEST_int_regslice;
wire    regslice_both_dataHBM_1_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_dest_V_U_vld_out;
reg    errorDataOut_s_TVALID_int_regslice;
wire    errorDataOut_s_TREADY_int_regslice;
wire    regslice_both_errorDataOut_s_V_data_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_keep_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_keep_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_keep_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_strb_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_strb_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_strb_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_last_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_last_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_last_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_dest_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_dest_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_dest_V_U_vld_out;
wire   [23:0] statBitMap_address_i_V_TDATA_int_regslice;
reg    statBitMap_address_i_V_TVALID_int_regslice;
wire    statBitMap_address_i_V_TREADY_int_regslice;
wire    regslice_both_statBitMap_address_i_V_U_vld_out;
reg    statBitMap_data_i_V_TVALID_int_regslice;
wire    statBitMap_data_i_V_TREADY_int_regslice;
wire    regslice_both_statBitMap_data_i_V_U_vld_out;
wire    regslice_both_readPSN_l_V_U_apdone_blk;
wire   [23:0] readPSN_l_V_TDATA_int_regslice;
wire    readPSN_l_V_TVALID_int_regslice;
reg    readPSN_l_V_TREADY_int_regslice;
wire    regslice_both_readPSN_l_V_U_ack_in;
reg    writePSN_l_V_TVALID_int_regslice;
wire    writePSN_l_V_TREADY_int_regslice;
wire    regslice_both_writePSN_l_V_U_vld_out;
reg    ap_condition_135;
reg    ap_condition_247;
reg    ap_condition_526;
reg    ap_condition_158;
reg    ap_condition_529;
reg    ap_condition_614;
reg    ap_condition_1495;
reg    ap_condition_1501;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 state = 3'd0;
#0 MSNqp_V = 13'd0;
#0 writeToMSN_V = 64'd9223372036854775808;
#0 inputPacket_l_data_V = 512'd0;
#0 inputPacket_l_keep_V = 64'd0;
#0 inputPacket_l_last_V = 1'd0;
#0 writePSN_V = 24'd0;
#0 errorDataQP_V = 13'd0;
#0 addressInHBM_V = 26'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

tx_write_dev_MSN_bram_V #(
    .DataWidth( 63 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
MSN_bram_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(MSN_bram_V_address0),
    .ce0(MSN_bram_V_ce0),
    .q0(MSN_bram_V_q0),
    .address1(MSN_bram_V_address1),
    .ce1(MSN_bram_V_ce1),
    .we1(MSN_bram_V_we1),
    .d1(MSN_bram_V_d1)
);

tx_write_dev_reset_MSN_V #(
    .DataWidth( 1 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
reset_MSN_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(reset_MSN_V_address0),
    .ce0(reset_MSN_V_ce0),
    .q0(reset_MSN_V_q0),
    .address1(reset_MSN_V_address1),
    .ce1(reset_MSN_V_ce1),
    .we1(reset_MSN_V_we1),
    .d1(reset_MSN_V_d1)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_data_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(data_s_TDATA),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_data_V_U_ack_in),
    .data_out(data_s_TDATA_int_regslice),
    .vld_out(data_s_TVALID_int_regslice),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(data_s_TKEEP),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_keep_V_U_ack_in),
    .data_out(data_s_TKEEP_int_regslice),
    .vld_out(regslice_both_data_s_V_keep_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(data_s_TSTRB),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_strb_V_U_ack_in),
    .data_out(data_s_TSTRB_int_regslice),
    .vld_out(regslice_both_data_s_V_strb_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(data_s_TLAST),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_last_V_U_ack_in),
    .data_out(data_s_TLAST_int_regslice),
    .vld_out(regslice_both_data_s_V_last_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 128 ))
regslice_both_header_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(header_V_TDATA),
    .vld_in(header_V_TVALID),
    .ack_in(regslice_both_header_V_U_ack_in),
    .data_out(header_V_TDATA_int_regslice),
    .vld_out(header_V_TVALID_int_regslice),
    .ack_out(header_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_header_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 8 ))
regslice_both_statOut_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(8'd2),
    .vld_in(statOut_s_V_TVALID_int_regslice),
    .ack_in(statOut_s_V_TREADY_int_regslice),
    .data_out(statOut_s_V_TDATA),
    .vld_out(regslice_both_statOut_s_V_U_vld_out),
    .ack_out(statOut_s_V_TREADY),
    .apdone_blk(regslice_both_statOut_s_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_payloadOut_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(p_Val2_1_reg_1241),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(payloadOut_s_TREADY_int_regslice),
    .data_out(payloadOut_s_TDATA),
    .vld_out(regslice_both_payloadOut_s_V_data_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_payloadOut_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(inputPacket_l_keep_V_load_reg_1249),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_keep_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TKEEP),
    .vld_out(regslice_both_payloadOut_s_V_keep_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_payloadOut_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(64'd0),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_strb_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TSTRB),
    .vld_out(regslice_both_payloadOut_s_V_strb_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_payloadOut_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(payloadOut_s_TLAST_int_regslice),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_last_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TLAST),
    .vld_out(regslice_both_payloadOut_s_V_last_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 13 ))
regslice_both_payloadOut_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(13'd0),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_dest_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TDEST),
    .vld_out(regslice_both_payloadOut_s_V_dest_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 320 ))
regslice_both_sq_frame_context_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(sq_frame_context_s_V_TDATA_int_regslice),
    .vld_in(sq_frame_context_s_V_TVALID_int_regslice),
    .ack_in(sq_frame_context_s_V_TREADY_int_regslice),
    .data_out(sq_frame_context_s_V_TDATA),
    .vld_out(regslice_both_sq_frame_context_s_V_U_vld_out),
    .ack_out(sq_frame_context_s_V_TREADY),
    .apdone_blk(regslice_both_sq_frame_context_s_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_headerHBM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(headerHBM_TDATA_int_regslice),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(headerHBM_TREADY_int_regslice),
    .data_out(headerHBM_TDATA),
    .vld_out(regslice_both_headerHBM_V_data_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_keep_V_U_ack_in_dummy),
    .data_out(headerHBM_TKEEP),
    .vld_out(regslice_both_headerHBM_V_keep_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_strb_V_U_ack_in_dummy),
    .data_out(headerHBM_TSTRB),
    .vld_out(regslice_both_headerHBM_V_strb_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_headerHBM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(1'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_last_V_U_ack_in_dummy),
    .data_out(headerHBM_TLAST),
    .vld_out(regslice_both_headerHBM_V_last_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(headerHBM_TDEST_int_regslice),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_dest_V_U_ack_in_dummy),
    .data_out(headerHBM_TDEST),
    .vld_out(regslice_both_headerHBM_V_dest_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_dataHBM_0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(dataHBM_0_TDATA_int_regslice),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(dataHBM_0_TREADY_int_regslice),
    .data_out(dataHBM_0_TDATA),
    .vld_out(regslice_both_dataHBM_0_V_data_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_keep_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TKEEP),
    .vld_out(regslice_both_dataHBM_0_V_keep_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_strb_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TSTRB),
    .vld_out(regslice_both_dataHBM_0_V_strb_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataHBM_0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(1'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_last_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TLAST),
    .vld_out(regslice_both_dataHBM_0_V_last_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(dataHBM_0_TDEST_int_regslice),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_dest_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TDEST),
    .vld_out(regslice_both_dataHBM_0_V_dest_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_dataHBM_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(dataHBM_1_TDATA_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(dataHBM_1_TREADY_int_regslice),
    .data_out(dataHBM_1_TDATA),
    .vld_out(regslice_both_dataHBM_1_V_data_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_keep_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TKEEP),
    .vld_out(regslice_both_dataHBM_1_V_keep_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(32'd0),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_strb_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TSTRB),
    .vld_out(regslice_both_dataHBM_1_V_strb_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataHBM_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(dataHBM_1_TLAST_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_last_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TLAST),
    .vld_out(regslice_both_dataHBM_1_V_last_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(dataHBM_1_TDEST_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_dest_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TDEST),
    .vld_out(regslice_both_dataHBM_1_V_dest_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_errorDataOut_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(p_Val2_1_reg_1241),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(errorDataOut_s_TREADY_int_regslice),
    .data_out(errorDataOut_s_TDATA),
    .vld_out(regslice_both_errorDataOut_s_V_data_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_errorDataOut_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(inputPacket_l_keep_V_load_reg_1249),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_keep_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TKEEP),
    .vld_out(regslice_both_errorDataOut_s_V_keep_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_errorDataOut_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(64'd0),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_strb_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TSTRB),
    .vld_out(regslice_both_errorDataOut_s_V_strb_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_errorDataOut_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(d_last_V_reg_1255),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_last_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TLAST),
    .vld_out(regslice_both_errorDataOut_s_V_last_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 13 ))
regslice_both_errorDataOut_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(errorDataQP_V),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_dest_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TDEST),
    .vld_out(regslice_both_errorDataOut_s_V_dest_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_statBitMap_address_i_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(statBitMap_address_i_V_TDATA_int_regslice),
    .vld_in(statBitMap_address_i_V_TVALID_int_regslice),
    .ack_in(statBitMap_address_i_V_TREADY_int_regslice),
    .data_out(statBitMap_address_i_V_TDATA),
    .vld_out(regslice_both_statBitMap_address_i_V_U_vld_out),
    .ack_out(statBitMap_address_i_V_TREADY),
    .apdone_blk(regslice_both_statBitMap_address_i_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 8 ))
regslice_both_statBitMap_data_i_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(8'd3),
    .vld_in(statBitMap_data_i_V_TVALID_int_regslice),
    .ack_in(statBitMap_data_i_V_TREADY_int_regslice),
    .data_out(statBitMap_data_i_V_TDATA),
    .vld_out(regslice_both_statBitMap_data_i_V_U_vld_out),
    .ack_out(statBitMap_data_i_V_TREADY),
    .apdone_blk(regslice_both_statBitMap_data_i_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_readPSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(readPSN_l_V_TDATA),
    .vld_in(readPSN_l_V_TVALID),
    .ack_in(regslice_both_readPSN_l_V_U_ack_in),
    .data_out(readPSN_l_V_TDATA_int_regslice),
    .vld_out(readPSN_l_V_TVALID_int_regslice),
    .ack_out(readPSN_l_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_readPSN_l_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_writePSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(1'b0),
    .data_in(writePSN_V_1_reg_1260),
    .vld_in(writePSN_l_V_TVALID_int_regslice),
    .ack_in(writePSN_l_V_TREADY_int_regslice),
    .data_out(writePSN_l_V_TDATA),
    .vld_out(regslice_both_writePSN_l_V_U_vld_out),
    .ack_out(writePSN_l_V_TREADY),
    .apdone_blk(regslice_both_writePSN_l_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        addressInHBM_V <= 26'd0;
    end else begin
        if ((1'b1 == ap_condition_526)) begin
            if ((1'b1 == ap_condition_247)) begin
                addressInHBM_V <= add_ln691_3_fu_1225_p2;
            end else if (((d_last_V_reg_1255 == 1'd0) & (state_load_reg_1237 == 3'd3))) begin
                addressInHBM_V <= add_ln691_fu_1015_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        writePSN_V <= 24'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0))))) begin
            writePSN_V <= add_ln691_2_fu_960_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_CS_fsm <= ap_NS_fsm;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_529)) begin
        if ((1'b1 == ap_condition_158)) begin
            ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_2_reg_561 <= {{header_V_TDATA_int_regslice[127:96]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_2_reg_561 <= ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_2_reg_561;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_529)) begin
        if ((1'b1 == ap_condition_158)) begin
            ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_2_reg_570 <= {{header_V_TDATA_int_regslice[95:64]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_2_reg_570 <= ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_2_reg_570;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0))))) begin
        state <= 3'd3;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (d_last_V_load_fu_655_p1 == 1'd1) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (d_last_V_load_fu_655_p1 == 1'd1) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        state <= 3'd0;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (inputPacket_l_last_V == 1'd0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        state <= 3'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((1'b1 == ap_condition_1501)) begin
            writeToMSN_V <= 64'd9223372036854775808;
        end else if ((1'b1 == ap_condition_1495)) begin
            writeToMSN_V <= add_ln691_1_fu_1086_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        MSNqp_V <= {{header_V_TDATA_int_regslice[44:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
        ap_enable_reg_pp0_iter1 <= 1'b1;
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0))))) begin
        ctx_qp_rdma_udp_port_src_reg_1302 <= req_rdma_udp_port_i;
        local_qp_read_reg_1327 <= local_qp;
        p_Result_6_reg_1312 <= {{ip_subnet[15:8]}};
        p_Result_7_reg_1317 <= {{ip_subnet[23:16]}};
        p_Result_8_reg_1322 <= {{ip_subnet[31:24]}};
        trunc_ln674_reg_1307 <= trunc_ln674_fu_876_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_last_V_reg_1255 <= inputPacket_l_last_V;
        d_last_V_reg_1255_pp0_iter1_reg <= d_last_V_reg_1255;
        icmp_ln70_reg_1298_pp0_iter1_reg <= icmp_ln70_reg_1298;
        icmp_ln76_reg_1294_pp0_iter1_reg <= icmp_ln76_reg_1294;
        icmp_ln886_reg_1332_pp0_iter1_reg <= icmp_ln886_reg_1332;
        inputPacket_l_keep_V_load_reg_1249 <= inputPacket_l_keep_V;
        p_Val2_1_reg_1241 <= inputPacket_l_data_V;
        p_vld_reg_1267_pp0_iter1_reg <= p_vld_reg_1267;
        state_load_reg_1237 <= state;
        state_load_reg_1237_pp0_iter1_reg <= state_load_reg_1237;
        user_reg_1283_pp0_iter1_reg <= user_reg_1283;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        errorDataQP_V <= {{header_V_TDATA_int_regslice[44:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0))))) begin
        h_time_V_reg_1356 <= currTime;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln70_reg_1298 <= icmp_ln70_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln76_reg_1294 <= icmp_ln76_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln886_reg_1332 <= icmp_ln886_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (inputPacket_l_last_V == 1'd0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (inputPacket_l_last_V == 1'd0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        inputPacket_l_data_V <= data_s_TDATA_int_regslice;
        inputPacket_l_keep_V <= data_s_TKEEP_int_regslice;
        inputPacket_l_last_V <= data_s_TLAST_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_vld_reg_1267 <= header_V_read_nbread_fu_312_p2_0;
        packetHeader_qp_V_reg_1271 <= {{header_V_TDATA_int_regslice[44:32]}};
        writePSN_V_1_reg_1260 <= writePSN_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_1277 <= {{header_V_TDATA_int_regslice[57:54]}};
        user_reg_1283 <= user_fu_728_p2;
        write_r_reg_1287 <= write_r_fu_738_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_135)) begin
        if ((state == 3'd3)) begin
            MSN_bram_V_address1 = zext_ln534_fu_675_p1;
        end else if ((state == 3'd4)) begin
            MSN_bram_V_address1 = zext_ln534_1_fu_664_p1;
        end else begin
            MSN_bram_V_address1 = 'bx;
        end
    end else begin
        MSN_bram_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        MSN_bram_V_ce0 = 1'b1;
    end else begin
        MSN_bram_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        MSN_bram_V_ce1 = 1'b1;
    end else begin
        MSN_bram_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_135)) begin
        if ((state == 3'd3)) begin
            MSN_bram_V_d1 = trunc_ln208_fu_670_p1;
        end else if ((state == 3'd4)) begin
            MSN_bram_V_d1 = trunc_ln208_1_fu_659_p1;
        end else begin
            MSN_bram_V_d1 = 'bx;
        end
    end else begin
        MSN_bram_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        MSN_bram_V_we1 = 1'b1;
    end else begin
        MSN_bram_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0))) begin
        ap_phi_mux_ctx_rdma_va_high_or_ack_V_2_phi_fu_564_p4 = p_Result_10_fu_1113_p3;
    end else begin
        ap_phi_mux_ctx_rdma_va_high_or_ack_V_2_phi_fu_564_p4 = ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_2_reg_561;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0))) begin
        ap_phi_mux_ctx_rdma_va_low_V_2_phi_fu_573_p4 = ctx_rdma_va_low_V_fu_1098_p1;
    end else begin
        ap_phi_mux_ctx_rdma_va_low_V_2_phi_fu_573_p4 = ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_2_reg_570;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_p_Val2_s = add_ln691_1_fu_1086_p2;
    end else begin
        ap_sig_allocacmp_p_Val2_s = writeToMSN_V;
    end
end

always @ (*) begin
    if ((((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        dataHBM_0_TDATA_blk_n = dataHBM_0_TREADY_int_regslice;
    end else begin
        dataHBM_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dataHBM_0_TVALID_int_regslice = 1'b1;
    end else begin
        dataHBM_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((d_last_V_reg_1255_pp0_iter1_reg == 1'd0) & (state_load_reg_1237_pp0_iter1_reg == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        dataHBM_1_TDATA_blk_n = dataHBM_1_TREADY_int_regslice;
    end else begin
        dataHBM_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_614)) begin
        if ((ap_predicate_op212_write_state2 == 1'b1)) begin
            dataHBM_1_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op208_write_state2 == 1'b1)) begin
            dataHBM_1_TLAST_int_regslice = 1'd0;
        end else begin
            dataHBM_1_TLAST_int_regslice = 'bx;
        end
    end else begin
        dataHBM_1_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op212_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op208_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataHBM_1_TVALID_int_regslice = 1'b1;
    end else begin
        dataHBM_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (inputPacket_l_last_V == 1'd0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (inputPacket_l_last_V == 1'd0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)))))) begin
        data_s_TDATA_blk_n = data_s_TVALID_int_regslice;
    end else begin
        data_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op189_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op171_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op104_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op86_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        data_s_TREADY_int_regslice = 1'b1;
    end else begin
        data_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        errorDataOut_s_TDATA_blk_n = errorDataOut_s_TREADY_int_regslice;
    end else begin
        errorDataOut_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        errorDataOut_s_TVALID_int_regslice = 1'b1;
    end else begin
        errorDataOut_s_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)))))) begin
        headerHBM_TDATA_blk_n = headerHBM_TREADY_int_regslice;
    end else begin
        headerHBM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op245_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        headerHBM_TVALID_int_regslice = 1'b1;
    end else begin
        headerHBM_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (header_V_TVALID_int_regslice == 1'b1))) begin
        header_V_TREADY_int_regslice = 1'b1;
    end else begin
        header_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((d_last_V_reg_1255_pp0_iter1_reg == 1'd0) & (state_load_reg_1237_pp0_iter1_reg == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((d_last_V_reg_1255 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        payloadOut_s_TDATA_blk_n = payloadOut_s_TREADY_int_regslice;
    end else begin
        payloadOut_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_614)) begin
        if ((ap_predicate_op213_write_state2 == 1'b1)) begin
            payloadOut_s_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op209_write_state2 == 1'b1)) begin
            payloadOut_s_TLAST_int_regslice = 1'd0;
        end else begin
            payloadOut_s_TLAST_int_regslice = 'bx;
        end
    end else begin
        payloadOut_s_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op213_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op209_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        payloadOut_s_TVALID_int_regslice = 1'b1;
    end else begin
        payloadOut_s_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        readPSN_l_V_TDATA_blk_n = readPSN_l_V_TVALID_int_regslice;
    end else begin
        readPSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        readPSN_l_V_TREADY_int_regslice = 1'b1;
    end else begin
        readPSN_l_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_135)) begin
        if ((state == 3'd3)) begin
            reset_MSN_V_address1 = zext_ln534_fu_675_p1;
        end else if ((state == 3'd4)) begin
            reset_MSN_V_address1 = zext_ln534_1_fu_664_p1;
        end else begin
            reset_MSN_V_address1 = 'bx;
        end
    end else begin
        reset_MSN_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        reset_MSN_V_ce0 = 1'b1;
    end else begin
        reset_MSN_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        reset_MSN_V_ce1 = 1'b1;
    end else begin
        reset_MSN_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        reset_MSN_V_we1 = 1'b1;
    end else begin
        reset_MSN_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)))))) begin
        sq_frame_context_s_V_TDATA_blk_n = sq_frame_context_s_V_TREADY_int_regslice;
    end else begin
        sq_frame_context_s_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op248_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sq_frame_context_s_V_TVALID_int_regslice = 1'b1;
    end else begin
        sq_frame_context_s_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)))))) begin
        statBitMap_address_i_V_TDATA_blk_n = statBitMap_address_i_V_TREADY_int_regslice;
    end else begin
        statBitMap_address_i_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op234_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statBitMap_address_i_V_TVALID_int_regslice = 1'b1;
    end else begin
        statBitMap_address_i_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)))))) begin
        statBitMap_data_i_V_TDATA_blk_n = statBitMap_data_i_V_TREADY_int_regslice;
    end else begin
        statBitMap_data_i_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op235_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statBitMap_data_i_V_TVALID_int_regslice = 1'b1;
    end else begin
        statBitMap_data_i_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln76_reg_1294_pp0_iter1_reg == 1'd1) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd1) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln76_reg_1294 == 1'd1) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd1) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)))))) begin
        statOut_s_V_TDATA_blk_n = statOut_s_V_TREADY_int_regslice;
    end else begin
        statOut_s_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op251_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statOut_s_V_TVALID_int_regslice = 1'b1;
    end else begin
        statOut_s_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        writePSN_l_V_TDATA_blk_n = writePSN_l_V_TREADY_int_regslice;
    end else begin
        writePSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1237 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        writePSN_l_V_TVALID_int_regslice = 1'b1;
    end else begin
        writePSN_l_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HBMaddress_V_fu_1173_p4 = {{ret_1_fu_1167_p2[30:5]}};

assign MSN_bram_V_address0 = zext_ln534_2_fu_948_p1;

assign add_ln691_1_fu_1086_p2 = (p_Result_s_17_fu_1078_p3 + 64'd1);

assign add_ln691_2_fu_960_p2 = (writePSN_V + 24'd1);

assign add_ln691_3_fu_1225_p2 = (HBMaddress_V_fu_1173_p4 + 26'd1);

assign add_ln691_fu_1015_p2 = (addressInHBM_V + 26'd2);

assign and_ln878_1_fu_828_p2 = (xor_ln878_fu_822_p2 & icmp_ln878_1_fu_748_p2);

assign and_ln878_fu_816_p2 = (icmp_ln878_fu_742_p2 & icmp_ln878_1_fu_748_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | ((ap_predicate_op263_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op262_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op261_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op260_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op259_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op257_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op256_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op251_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op235_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op213_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op212_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op209_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op208_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op189_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op171_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op104_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op86_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (state == 3'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((ap_predicate_op263_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op262_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op261_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op260_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op259_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op257_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op256_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op251_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op235_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op213_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op212_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op209_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op208_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op189_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op171_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op104_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op86_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (state == 3'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((ap_predicate_op263_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op262_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op261_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op260_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op259_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op257_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op256_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op251_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op235_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op213_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op212_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op209_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op208_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op189_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op171_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op104_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op86_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (state == 3'd0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op189_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op171_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op104_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op86_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (state == 3'd0)));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op251_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op235_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op213_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op212_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op209_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op208_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op251_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op235_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op213_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op212_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op209_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op208_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op263_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op262_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op261_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op260_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op259_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op257_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op256_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | ((ap_predicate_op263_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op262_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op261_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op260_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op259_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op257_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op256_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op255_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd4) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd3) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1237_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_135 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_1495 = ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1501 = ((icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_158 = ((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0));
end

always @ (*) begin
    ap_condition_247 = (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_condition_526 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_529 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_614 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_2_reg_561 = 'bx;

assign ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_2_reg_570 = 'bx;

always @ (*) begin
    ap_predicate_op104_read_state1 = ((inputPacket_l_last_V == 1'd0) & (state == 3'd3));
end

always @ (*) begin
    ap_predicate_op171_read_state1 = ((icmp_ln886_fu_910_p2 == 1'd1) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0));
end

always @ (*) begin
    ap_predicate_op189_read_state1 = (((icmp_ln886_fu_910_p2 == 1'd0) & (icmp_ln76_fu_864_p2 == 1'd0) & (user_fu_728_p2 == 1'd0) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)) | ((icmp_ln70_fu_870_p2 == 1'd0) & (user_fu_728_p2 == 1'd1) & (header_V_read_nbread_fu_312_p2_0 == 1'd1) & (state == 3'd0)));
end

always @ (*) begin
    ap_predicate_op208_write_state2 = ((d_last_V_reg_1255 == 1'd0) & (state_load_reg_1237 == 3'd3));
end

always @ (*) begin
    ap_predicate_op209_write_state2 = ((d_last_V_reg_1255 == 1'd0) & (state_load_reg_1237 == 3'd3));
end

always @ (*) begin
    ap_predicate_op212_write_state2 = ((d_last_V_reg_1255 == 1'd1) & (state_load_reg_1237 == 3'd3));
end

always @ (*) begin
    ap_predicate_op213_write_state2 = ((d_last_V_reg_1255 == 1'd1) & (state_load_reg_1237 == 3'd3));
end

always @ (*) begin
    ap_predicate_op234_write_state2 = (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op235_write_state2 = (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op245_write_state2 = (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op248_write_state2 = (((icmp_ln886_reg_1332 == 1'd0) & (icmp_ln76_reg_1294 == 1'd0) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd0) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op251_write_state2 = (((icmp_ln76_reg_1294 == 1'd1) & (user_reg_1283 == 1'd0) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)) | ((icmp_ln70_reg_1298 == 1'd1) & (user_reg_1283 == 1'd1) & (p_vld_reg_1267 == 1'd1) & (state_load_reg_1237 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op254_write_state3 = ((d_last_V_reg_1255_pp0_iter1_reg == 1'd0) & (state_load_reg_1237_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op255_write_state3 = ((d_last_V_reg_1255_pp0_iter1_reg == 1'd0) & (state_load_reg_1237_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op256_write_state3 = ((d_last_V_reg_1255_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op257_write_state3 = ((d_last_V_reg_1255_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op259_write_state3 = (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op260_write_state3 = (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op261_write_state3 = (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op262_write_state3 = (((icmp_ln886_reg_1332_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1294_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd0) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op263_write_state3 = (((icmp_ln76_reg_1294_pp0_iter1_reg == 1'd1) & (user_reg_1283_pp0_iter1_reg == 1'd0) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1298_pp0_iter1_reg == 1'd1) & (user_reg_1283_pp0_iter1_reg == 1'd1) & (p_vld_reg_1267_pp0_iter1_reg == 1'd1) & (state_load_reg_1237_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op86_read_state1 = ((inputPacket_l_last_V == 1'd0) & (state == 3'd4));
end

assign ctx_rdma_va_low_V_fu_1098_p1 = MSN_bram_V_q0[31:0];

assign d_last_V_load_fu_655_p1 = inputPacket_l_last_V;

assign dataHBM_0_TDATA_int_regslice = p_Val2_1_reg_1241[255:0];

assign dataHBM_0_TDEST_int_regslice = addressInHBM_V;

assign dataHBM_0_TVALID = regslice_both_dataHBM_0_V_data_V_U_vld_out;

assign dataHBM_1_TDATA_int_regslice = {{p_Val2_1_reg_1241[511:256]}};

assign dataHBM_1_TDEST_int_regslice = headerToHBM_dest_V_1_fu_1004_p2;

assign dataHBM_1_TVALID = regslice_both_dataHBM_1_V_data_V_U_vld_out;

assign data_s_TREADY = regslice_both_data_s_V_data_V_U_ack_in;

assign errorDataOut_s_TVALID = regslice_both_errorDataOut_s_V_data_V_U_vld_out;

assign headerHBM_TDATA_int_regslice = p_Result_11_fu_1126_p8;

assign headerHBM_TDEST_int_regslice = HBMaddress_V_fu_1173_p4;

assign headerHBM_TVALID = regslice_both_headerHBM_V_data_V_U_vld_out;

assign headerToHBM_dest_V_1_fu_1004_p2 = (zext_ln130_fu_990_p1 + 27'd1);

assign header_V_TREADY = regslice_both_header_V_U_ack_in;

assign header_V_read_nbread_fu_312_p2_0 = header_V_TVALID_int_regslice;

assign icmp_ln70_fu_870_p2 = (($signed(select_ln878_2_fu_856_p3) > $signed(22'd1048559)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_864_p2 = (($signed(select_ln878_2_fu_856_p3) > $signed(22'd1048574)) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_748_p2 = ((write_r_fu_738_p1 < read_r_fu_734_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_742_p2 = ((writePSN_V < readPSN_l_V_TDATA_int_regslice) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_910_p2 = ((packetHeader_numberOfRetranssmitions_V_fu_697_p4 > numberOfretranssmisionsForressetingMSN) ? 1'b1 : 1'b0);

assign or_ln1_fu_788_p3 = {{1'd1}, {read_r_fu_734_p1}};

assign or_ln_fu_762_p3 = {{1'd1}, {write_r_fu_738_p1}};

assign p_Result_10_fu_1113_p3 = {{reset_MSN_V_q0}, {p_Result_1_fu_1103_p4}};

assign p_Result_11_fu_1126_p8 = {{{{{{{h_time_V_reg_1356}, {packetHeader_qp_V_reg_1271}}, {tmp_1_reg_1277}}, {6'd0}}, {writePSN_V_1_reg_1260}}, {ap_phi_mux_ctx_rdma_va_high_or_ack_V_2_phi_fu_564_p4}}, {ap_phi_mux_ctx_rdma_va_low_V_2_phi_fu_573_p4}};

assign p_Result_1_fu_1103_p4 = {{MSN_bram_V_q0[62:32]}};

assign p_Result_4_fu_1048_p4 = {{val_V_1_fu_1038_p2[15:8]}};

assign p_Result_5_fu_1027_p5 = {{{{trunc_ln674_reg_1307}, {p_Result_6_reg_1312}}, {p_Result_7_reg_1317}}, {p_Result_8_reg_1322}};

assign p_Result_9_fu_1058_p4 = {{val_V_1_fu_1038_p2[23:16]}};

assign p_Result_s_17_fu_1078_p3 = {{1'd0}, {MSN_bram_V_q0}};

assign p_Result_s_fu_1068_p4 = {{val_V_1_fu_1038_p2[31:24]}};

assign packetHeader_numberOfRetranssmitions_V_fu_697_p4 = {{header_V_TDATA_int_regslice[31:16]}};

assign packetHeader_qp_V_fu_707_p4 = {{header_V_TDATA_int_regslice[44:32]}};

assign packetHeader_type_V_fu_693_p1 = header_V_TDATA_int_regslice[1:0];

assign payloadOut_s_TVALID = regslice_both_payloadOut_s_V_data_V_U_vld_out;

assign readPSN_l_V_TREADY = regslice_both_readPSN_l_V_U_ack_in;

assign read_r_fu_734_p1 = readPSN_l_V_TDATA_int_regslice[19:0];

assign reset_MSN_V_address0 = zext_ln534_2_fu_948_p1;

assign reset_MSN_V_d1 = ap_sig_allocacmp_p_Val2_s[32'd63];

assign ret_1_fu_1167_p2 = (zext_ln1345_fu_1152_p1 + zext_ln1345_1_fu_1163_p1);

assign ret_fu_806_p2 = (zext_ln1347_1_fu_758_p1 - zext_ln44_fu_774_p1);

assign select_ln878_1_fu_848_p3 = ((and_ln878_fu_816_p2[0:0] == 1'b1) ? sub_ln44_fu_782_p2 : sext_ln878_fu_812_p1);

assign select_ln878_2_fu_856_p3 = ((xor_ln878_1_fu_842_p2[0:0] == 1'b1) ? select_ln878_fu_834_p3 : select_ln878_1_fu_848_p3);

assign select_ln878_fu_834_p3 = ((and_ln878_1_fu_828_p2[0:0] == 1'b1) ? sub_ln44_fu_782_p2 : sub_ln46_fu_800_p2);

assign sext_ln878_fu_812_p1 = $signed(ret_fu_806_p2);

assign shl_ln1345_1_fu_1156_p3 = {{write_r_reg_1287}, {5'd0}};

assign shl_ln_fu_1145_p3 = {{write_r_reg_1287}, {10'd0}};

assign sq_frame_context_s_V_TDATA_int_regslice = (tmp7_fu_1188_p16 | 320'd321574268017491360471842816);

assign sq_frame_context_s_V_TVALID = regslice_both_sq_frame_context_s_V_U_vld_out;

assign statBitMap_address_i_V_TDATA_int_regslice = write_r_reg_1287;

assign statBitMap_address_i_V_TVALID = regslice_both_statBitMap_address_i_V_U_vld_out;

assign statBitMap_data_i_V_TVALID = regslice_both_statBitMap_data_i_V_U_vld_out;

assign statOut_s_V_TVALID = regslice_both_statOut_s_V_U_vld_out;

assign sub_ln44_fu_782_p2 = (zext_ln1347_2_fu_770_p1 - zext_ln44_1_fu_778_p1);

assign sub_ln46_fu_800_p2 = (zext_ln46_fu_796_p1 - zext_ln1347_fu_754_p1);

assign tmp7_fu_1188_p16 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{96'd0}, {ap_phi_mux_ctx_rdma_va_low_V_2_phi_fu_573_p4}}}, {ap_phi_mux_ctx_rdma_va_high_or_ack_V_2_phi_fu_564_p4}}}, {16'd0}}}, {ctx_qp_rdma_udp_port_src_reg_1302}}}, {trunc_ln674_1_fu_1044_p1}}}, {p_Result_4_fu_1048_p4}}}, {p_Result_9_fu_1058_p4}}}, {p_Result_s_fu_1068_p4}}}, {22'd0}}}, {tmp_1_reg_1277}}}, {14'd0}}}, {writePSN_V_1_reg_1260}}}, {19'd0}}}, {local_qp_read_reg_1327}};

assign trunc_ln208_1_fu_659_p1 = ap_sig_allocacmp_p_Val2_s[62:0];

assign trunc_ln208_fu_670_p1 = ap_sig_allocacmp_p_Val2_s[62:0];

assign trunc_ln674_1_fu_1044_p1 = val_V_1_fu_1038_p2[7:0];

assign trunc_ln674_fu_876_p1 = ip_subnet[7:0];

assign user_fu_728_p2 = ((packetHeader_type_V_fu_693_p1 == 2'd0) ? 1'b1 : 1'b0);

assign val_V_1_fu_1038_p2 = (p_Result_5_fu_1027_p5 + zext_ln208_fu_1035_p1);

assign writePSN_l_V_TVALID = regslice_both_writePSN_l_V_U_vld_out;

assign write_r_fu_738_p1 = writePSN_V[19:0];

assign xor_ln878_1_fu_842_p2 = (icmp_ln878_fu_742_p2 ^ icmp_ln878_1_fu_748_p2);

assign xor_ln878_fu_822_p2 = (icmp_ln878_fu_742_p2 ^ 1'd1);

assign zext_ln130_fu_990_p1 = addressInHBM_V;

assign zext_ln1345_1_fu_1163_p1 = shl_ln1345_1_fu_1156_p3;

assign zext_ln1345_fu_1152_p1 = shl_ln_fu_1145_p3;

assign zext_ln1347_1_fu_758_p1 = write_r_fu_738_p1;

assign zext_ln1347_2_fu_770_p1 = or_ln_fu_762_p3;

assign zext_ln1347_fu_754_p1 = write_r_fu_738_p1;

assign zext_ln208_fu_1035_p1 = packetHeader_qp_V_reg_1271;

assign zext_ln44_1_fu_778_p1 = read_r_fu_734_p1;

assign zext_ln44_fu_774_p1 = read_r_fu_734_p1;

assign zext_ln46_fu_796_p1 = or_ln1_fu_788_p3;

assign zext_ln534_1_fu_664_p1 = MSNqp_V;

assign zext_ln534_2_fu_948_p1 = packetHeader_qp_V_fu_707_p4;

assign zext_ln534_fu_675_p1 = MSNqp_V;

endmodule //tx_write_dev
