// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="tx_write_dev_tx_write_dev,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu55c-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.256000,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1578,HLS_SYN_LUT=1303,HLS_VERSION=2020_2}" *)

module tx_write_dev (
        ap_clk,
        ap_rst_n,
        data_s_TDATA,
        data_s_TVALID,
        data_s_TREADY,
        data_s_TKEEP,
        data_s_TSTRB,
        data_s_TLAST,
        header_V_TDATA,
        header_V_TVALID,
        header_V_TREADY,
        statOut_s_V_TDATA,
        statOut_s_V_TVALID,
        statOut_s_V_TREADY,
        payloadOut_s_TDATA,
        payloadOut_s_TVALID,
        payloadOut_s_TREADY,
        payloadOut_s_TKEEP,
        payloadOut_s_TSTRB,
        payloadOut_s_TLAST,
        payloadOut_s_TDEST,
        sq_frame_context_s_V_TDATA,
        sq_frame_context_s_V_TVALID,
        sq_frame_context_s_V_TREADY,
        req_rdma_udp_port_i,
        currTime,
        numberOfretranssmisionsForressetingMSN,
        headerHBM_TDATA,
        headerHBM_TVALID,
        headerHBM_TREADY,
        headerHBM_TKEEP,
        headerHBM_TSTRB,
        headerHBM_TLAST,
        headerHBM_TDEST,
        dataHBM_0_TDATA,
        dataHBM_0_TVALID,
        dataHBM_0_TREADY,
        dataHBM_0_TKEEP,
        dataHBM_0_TSTRB,
        dataHBM_0_TLAST,
        dataHBM_0_TDEST,
        dataHBM_1_TDATA,
        dataHBM_1_TVALID,
        dataHBM_1_TREADY,
        dataHBM_1_TKEEP,
        dataHBM_1_TSTRB,
        dataHBM_1_TLAST,
        dataHBM_1_TDEST,
        errorDataOut_s_TDATA,
        errorDataOut_s_TVALID,
        errorDataOut_s_TREADY,
        errorDataOut_s_TKEEP,
        errorDataOut_s_TSTRB,
        errorDataOut_s_TLAST,
        errorDataOut_s_TDEST,
        statBitMap_address_i_V_TDATA,
        statBitMap_address_i_V_TVALID,
        statBitMap_address_i_V_TREADY,
        statBitMap_data_i_V_TDATA,
        statBitMap_data_i_V_TVALID,
        statBitMap_data_i_V_TREADY,
        readPSN_l_V_TDATA,
        readPSN_l_V_TVALID,
        readPSN_l_V_TREADY,
        writePSN_l_V_TDATA,
        writePSN_l_V_TVALID,
        writePSN_l_V_TREADY,
        local_qp,
        ip_subnet
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [511:0] data_s_TDATA;
input   data_s_TVALID;
output   data_s_TREADY;
input  [63:0] data_s_TKEEP;
input  [63:0] data_s_TSTRB;
input  [0:0] data_s_TLAST;
input  [127:0] header_V_TDATA;
input   header_V_TVALID;
output   header_V_TREADY;
output  [7:0] statOut_s_V_TDATA;
output   statOut_s_V_TVALID;
input   statOut_s_V_TREADY;
output  [511:0] payloadOut_s_TDATA;
output   payloadOut_s_TVALID;
input   payloadOut_s_TREADY;
output  [63:0] payloadOut_s_TKEEP;
output  [63:0] payloadOut_s_TSTRB;
output  [0:0] payloadOut_s_TLAST;
output  [12:0] payloadOut_s_TDEST;
output  [319:0] sq_frame_context_s_V_TDATA;
output   sq_frame_context_s_V_TVALID;
input   sq_frame_context_s_V_TREADY;
input  [15:0] req_rdma_udp_port_i;
input  [63:0] currTime;
input  [15:0] numberOfretranssmisionsForressetingMSN;
output  [255:0] headerHBM_TDATA;
output   headerHBM_TVALID;
input   headerHBM_TREADY;
output  [31:0] headerHBM_TKEEP;
output  [31:0] headerHBM_TSTRB;
output  [0:0] headerHBM_TLAST;
output  [31:0] headerHBM_TDEST;
output  [255:0] dataHBM_0_TDATA;
output   dataHBM_0_TVALID;
input   dataHBM_0_TREADY;
output  [31:0] dataHBM_0_TKEEP;
output  [31:0] dataHBM_0_TSTRB;
output  [0:0] dataHBM_0_TLAST;
output  [31:0] dataHBM_0_TDEST;
output  [255:0] dataHBM_1_TDATA;
output   dataHBM_1_TVALID;
input   dataHBM_1_TREADY;
output  [31:0] dataHBM_1_TKEEP;
output  [31:0] dataHBM_1_TSTRB;
output  [0:0] dataHBM_1_TLAST;
output  [31:0] dataHBM_1_TDEST;
output  [511:0] errorDataOut_s_TDATA;
output   errorDataOut_s_TVALID;
input   errorDataOut_s_TREADY;
output  [63:0] errorDataOut_s_TKEEP;
output  [63:0] errorDataOut_s_TSTRB;
output  [0:0] errorDataOut_s_TLAST;
output  [12:0] errorDataOut_s_TDEST;
output  [23:0] statBitMap_address_i_V_TDATA;
output   statBitMap_address_i_V_TVALID;
input   statBitMap_address_i_V_TREADY;
output  [7:0] statBitMap_data_i_V_TDATA;
output   statBitMap_data_i_V_TVALID;
input   statBitMap_data_i_V_TREADY;
input  [23:0] readPSN_l_V_TDATA;
input   readPSN_l_V_TVALID;
output   readPSN_l_V_TREADY;
output  [23:0] writePSN_l_V_TDATA;
output   writePSN_l_V_TVALID;
input   writePSN_l_V_TREADY;
input  [12:0] local_qp;
input  [31:0] ip_subnet;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
reg   [2:0] state;
reg   [12:0] MSNqp_V;
reg   [63:0] writeToMSN_V;
reg   [511:0] inputPacket_l_data_V;
reg   [63:0] inputPacket_l_keep_V;
reg   [0:0] inputPacket_l_last_V;
reg   [23:0] writePSN_V;
reg   [12:0] MSN_V_address0;
reg    MSN_V_ce0;
reg    MSN_V_we0;
wire   [63:0] MSN_V_q0;
reg   [12:0] errorDataQP_V;
reg   [25:0] addressInHBM_V;
reg    data_s_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
wire   [2:0] state_load_load_fu_673_p1;
wire   [0:0] p_vld_fu_712_p1;
wire   [0:0] user_fu_755_p2;
wire   [0:0] icmp_ln76_fu_891_p2;
wire   [0:0] icmp_ln886_fu_937_p2;
wire   [0:0] icmp_ln70_fu_897_p2;
wire   [0:0] d_last_V_load_fu_694_p1;
reg    statOut_s_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] state_load_reg_1262;
reg   [0:0] p_vld_reg_1292;
reg   [0:0] user_reg_1308;
reg   [0:0] icmp_ln70_reg_1323;
reg   [0:0] icmp_ln76_reg_1319;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] state_load_reg_1262_pp0_iter1_reg;
reg   [0:0] p_vld_reg_1292_pp0_iter1_reg;
reg   [0:0] user_reg_1308_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_1323_pp0_iter1_reg;
reg   [0:0] icmp_ln76_reg_1319_pp0_iter1_reg;
reg    payloadOut_s_TDATA_blk_n;
reg   [0:0] d_last_V_reg_1280;
reg   [0:0] d_last_V_reg_1280_pp0_iter1_reg;
reg    sq_frame_context_s_V_TDATA_blk_n;
reg   [0:0] icmp_ln886_reg_1357;
reg   [0:0] icmp_ln886_reg_1357_pp0_iter1_reg;
reg    headerHBM_TDATA_blk_n;
reg    dataHBM_0_TDATA_blk_n;
reg    dataHBM_1_TDATA_blk_n;
reg    errorDataOut_s_TDATA_blk_n;
reg    statBitMap_address_i_V_TDATA_blk_n;
reg    statBitMap_data_i_V_TDATA_blk_n;
reg    readPSN_l_V_TDATA_blk_n;
reg    writePSN_l_V_TDATA_blk_n;
reg    ap_predicate_op82_read_state1;
reg    ap_predicate_op95_read_state1;
reg    ap_predicate_op159_read_state1;
reg    ap_predicate_op174_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op183_write_state2;
reg    ap_predicate_op189_write_state2;
reg    ap_predicate_op193_write_state2;
reg    ap_predicate_op194_write_state2;
reg    ap_predicate_op198_write_state2;
reg    ap_predicate_op199_write_state2;
reg    ap_predicate_op220_write_state2;
reg    ap_predicate_op221_write_state2;
reg    ap_predicate_op231_write_state2;
reg    ap_predicate_op234_write_state2;
reg    ap_predicate_op238_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_predicate_op244_write_state3;
reg    ap_predicate_op245_write_state3;
reg    ap_predicate_op246_write_state3;
reg    ap_predicate_op247_write_state3;
reg    ap_predicate_op248_write_state3;
reg    ap_predicate_op249_write_state3;
reg    ap_predicate_op251_write_state3;
reg    ap_predicate_op252_write_state3;
reg    ap_predicate_op253_write_state3;
reg    ap_predicate_op254_write_state3;
reg    ap_predicate_op255_write_state3;
wire    regslice_both_statOut_s_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_data_V_U_apdone_blk;
wire    regslice_both_sq_frame_context_s_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_data_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_data_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_data_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_data_V_U_apdone_blk;
wire    regslice_both_statBitMap_address_i_V_U_apdone_blk;
wire    regslice_both_statBitMap_data_i_V_U_apdone_blk;
wire    regslice_both_writePSN_l_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [511:0] p_Val2_s_reg_1266;
reg   [63:0] inputPacket_l_keep_V_load_reg_1274;
reg   [23:0] writePSN_V_1_reg_1285;
wire   [12:0] packetHeader_qp_V_fu_734_p4;
reg   [12:0] packetHeader_qp_V_reg_1296;
reg   [3:0] tmp_1_reg_1302;
wire   [19:0] write_r_fu_765_p1;
reg   [19:0] write_r_reg_1312;
reg   [15:0] ctx_qp_rdma_udp_port_src_reg_1327;
wire   [7:0] trunc_ln674_fu_903_p1;
reg   [7:0] trunc_ln674_reg_1332;
reg   [7:0] p_Result_1_reg_1337;
reg   [7:0] p_Result_2_reg_1342;
reg   [7:0] p_Result_3_reg_1347;
reg   [12:0] local_qp_read_reg_1352;
reg   [63:0] h_time_V_reg_1376;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] ap_phi_reg_pp0_iter0_state_flag_0_reg_526;
reg   [0:0] ap_phi_reg_pp0_iter1_state_flag_0_reg_526;
reg   [1:0] ap_phi_mux_storemerge_phi_fu_543_p4;
wire   [1:0] ap_phi_reg_pp0_iter0_storemerge_reg_539;
reg   [1:0] ap_phi_reg_pp0_iter1_storemerge_reg_539;
reg   [31:0] ap_phi_mux_ctx_rdma_va_high_or_ack_V_phi_fu_554_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_reg_551;
reg   [31:0] ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551;
reg   [31:0] ap_phi_mux_ctx_rdma_va_low_V_phi_fu_563_p4;
wire   [31:0] ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_reg_560;
reg   [31:0] ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560;
wire   [31:0] trunc_ln674_2_fu_1120_p1;
reg   [0:0] ap_phi_mux_state_flag_1_phi_fu_574_p18;
wire   [0:0] ap_phi_reg_pp0_iter0_state_flag_1_reg_569;
reg   [0:0] ap_phi_reg_pp0_iter1_state_flag_1_reg_569;
reg   [2:0] ap_phi_mux_state_new_1_phi_fu_610_p18;
wire   [2:0] ap_phi_reg_pp0_iter0_state_new_1_reg_603;
reg   [2:0] ap_phi_reg_pp0_iter1_state_new_1_reg_603;
wire   [2:0] zext_ln52_fu_1136_p1;
wire   [63:0] zext_ln534_1_fu_698_p1;
wire   [63:0] zext_ln534_fu_703_p1;
wire   [63:0] zext_ln534_2_fu_975_p1;
reg   [2:0] ap_sig_allocacmp_state_load;
wire   [63:0] add_ln691_1_fu_1108_p2;
reg   [63:0] ap_sig_allocacmp_writeToMSN_V_load;
wire   [23:0] add_ln691_2_fu_980_p2;
wire   [25:0] add_ln691_fu_1035_p2;
wire   [25:0] add_ln691_3_fu_1244_p2;
wire   [0:0] header_V_read_nbread_fu_314_p2_0;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] packetHeader_type_V_fu_720_p1;
wire   [19:0] read_r_fu_761_p1;
wire   [20:0] or_ln_fu_789_p3;
wire   [21:0] zext_ln1347_2_fu_797_p1;
wire   [21:0] zext_ln44_1_fu_805_p1;
wire   [20:0] or_ln1_fu_815_p3;
wire   [21:0] zext_ln46_fu_823_p1;
wire   [21:0] zext_ln1347_fu_781_p1;
wire   [20:0] zext_ln1347_1_fu_785_p1;
wire   [20:0] zext_ln44_fu_801_p1;
wire   [20:0] ret_fu_833_p2;
wire   [0:0] icmp_ln878_fu_769_p2;
wire   [0:0] icmp_ln878_1_fu_775_p2;
wire   [0:0] xor_ln878_fu_849_p2;
wire   [0:0] and_ln878_1_fu_855_p2;
wire   [21:0] sub_ln44_fu_809_p2;
wire   [21:0] sub_ln46_fu_827_p2;
wire   [0:0] and_ln878_fu_843_p2;
wire  signed [21:0] sext_ln878_fu_839_p1;
wire   [0:0] xor_ln878_1_fu_869_p2;
wire   [21:0] select_ln878_fu_861_p3;
wire   [21:0] select_ln878_1_fu_875_p3;
wire   [21:0] select_ln878_2_fu_883_p3;
wire   [15:0] packetHeader_numberOfRetranssmitions_V_fu_724_p4;
wire   [26:0] zext_ln131_fu_1010_p1;
wire   [26:0] headerToHBM_dest_V_1_fu_1024_p2;
wire   [31:0] p_Result_10_fu_1047_p5;
wire   [31:0] zext_ln208_fu_1055_p1;
wire   [31:0] val_V_1_fu_1058_p2;
wire   [63:0] p_Result_s_fu_1098_p4;
wire   [174:0] p_Result_11_fu_1145_p8;
wire   [29:0] shl_ln_fu_1164_p3;
wire   [24:0] shl_ln1345_1_fu_1175_p3;
wire   [30:0] zext_ln1345_fu_1171_p1;
wire   [30:0] zext_ln1345_1_fu_1182_p1;
wire   [30:0] ret_1_fu_1186_p2;
wire   [25:0] HBMaddress_V_fu_1192_p4;
wire   [7:0] trunc_ln674_1_fu_1064_p1;
wire   [7:0] p_Result_6_fu_1068_p4;
wire   [7:0] p_Result_7_fu_1078_p4;
wire   [7:0] p_Result_8_fu_1088_p4;
wire   [319:0] tmp7_fu_1207_p16;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_data_s_V_data_V_U_apdone_blk;
wire   [511:0] data_s_TDATA_int_regslice;
wire    data_s_TVALID_int_regslice;
reg    data_s_TREADY_int_regslice;
wire    regslice_both_data_s_V_data_V_U_ack_in;
wire    regslice_both_data_s_V_keep_V_U_apdone_blk;
wire   [63:0] data_s_TKEEP_int_regslice;
wire    regslice_both_data_s_V_keep_V_U_vld_out;
wire    regslice_both_data_s_V_keep_V_U_ack_in;
wire    regslice_both_data_s_V_strb_V_U_apdone_blk;
wire   [63:0] data_s_TSTRB_int_regslice;
wire    regslice_both_data_s_V_strb_V_U_vld_out;
wire    regslice_both_data_s_V_strb_V_U_ack_in;
wire    regslice_both_data_s_V_last_V_U_apdone_blk;
wire   [0:0] data_s_TLAST_int_regslice;
wire    regslice_both_data_s_V_last_V_U_vld_out;
wire    regslice_both_data_s_V_last_V_U_ack_in;
wire    regslice_both_header_V_U_apdone_blk;
wire   [127:0] header_V_TDATA_int_regslice;
wire    header_V_TVALID_int_regslice;
reg    header_V_TREADY_int_regslice;
wire    regslice_both_header_V_U_ack_in;
reg    statOut_s_V_TVALID_int_regslice;
wire    statOut_s_V_TREADY_int_regslice;
wire    regslice_both_statOut_s_V_U_vld_out;
reg    payloadOut_s_TVALID_int_regslice;
wire    payloadOut_s_TREADY_int_regslice;
wire    regslice_both_payloadOut_s_V_data_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_keep_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_keep_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_keep_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_strb_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_strb_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_strb_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_last_V_U_apdone_blk;
reg   [0:0] payloadOut_s_TLAST_int_regslice;
wire    regslice_both_payloadOut_s_V_last_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_last_V_U_vld_out;
wire    regslice_both_payloadOut_s_V_dest_V_U_apdone_blk;
wire    regslice_both_payloadOut_s_V_dest_V_U_ack_in_dummy;
wire    regslice_both_payloadOut_s_V_dest_V_U_vld_out;
wire   [319:0] sq_frame_context_s_V_TDATA_int_regslice;
reg    sq_frame_context_s_V_TVALID_int_regslice;
wire    sq_frame_context_s_V_TREADY_int_regslice;
wire    regslice_both_sq_frame_context_s_V_U_vld_out;
wire   [255:0] headerHBM_TDATA_int_regslice;
reg    headerHBM_TVALID_int_regslice;
wire    headerHBM_TREADY_int_regslice;
wire    regslice_both_headerHBM_V_data_V_U_vld_out;
wire    regslice_both_headerHBM_V_keep_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_keep_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_keep_V_U_vld_out;
wire    regslice_both_headerHBM_V_strb_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_strb_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_strb_V_U_vld_out;
wire    regslice_both_headerHBM_V_last_V_U_apdone_blk;
wire    regslice_both_headerHBM_V_last_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_last_V_U_vld_out;
wire    regslice_both_headerHBM_V_dest_V_U_apdone_blk;
wire   [31:0] headerHBM_TDEST_int_regslice;
wire    regslice_both_headerHBM_V_dest_V_U_ack_in_dummy;
wire    regslice_both_headerHBM_V_dest_V_U_vld_out;
wire   [255:0] dataHBM_0_TDATA_int_regslice;
reg    dataHBM_0_TVALID_int_regslice;
wire    dataHBM_0_TREADY_int_regslice;
wire    regslice_both_dataHBM_0_V_data_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_keep_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_keep_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_strb_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_strb_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_last_V_U_apdone_blk;
wire    regslice_both_dataHBM_0_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_last_V_U_vld_out;
wire    regslice_both_dataHBM_0_V_dest_V_U_apdone_blk;
wire   [31:0] dataHBM_0_TDEST_int_regslice;
wire    regslice_both_dataHBM_0_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_0_V_dest_V_U_vld_out;
wire   [255:0] dataHBM_1_TDATA_int_regslice;
reg    dataHBM_1_TVALID_int_regslice;
wire    dataHBM_1_TREADY_int_regslice;
wire    regslice_both_dataHBM_1_V_data_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_keep_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_keep_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_strb_V_U_apdone_blk;
wire    regslice_both_dataHBM_1_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_strb_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_last_V_U_apdone_blk;
reg   [0:0] dataHBM_1_TLAST_int_regslice;
wire    regslice_both_dataHBM_1_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_last_V_U_vld_out;
wire    regslice_both_dataHBM_1_V_dest_V_U_apdone_blk;
wire   [31:0] dataHBM_1_TDEST_int_regslice;
wire    regslice_both_dataHBM_1_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dataHBM_1_V_dest_V_U_vld_out;
reg    errorDataOut_s_TVALID_int_regslice;
wire    errorDataOut_s_TREADY_int_regslice;
wire    regslice_both_errorDataOut_s_V_data_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_keep_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_keep_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_keep_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_strb_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_strb_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_strb_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_last_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_last_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_last_V_U_vld_out;
wire    regslice_both_errorDataOut_s_V_dest_V_U_apdone_blk;
wire    regslice_both_errorDataOut_s_V_dest_V_U_ack_in_dummy;
wire    regslice_both_errorDataOut_s_V_dest_V_U_vld_out;
wire   [23:0] statBitMap_address_i_V_TDATA_int_regslice;
reg    statBitMap_address_i_V_TVALID_int_regslice;
wire    statBitMap_address_i_V_TREADY_int_regslice;
wire    regslice_both_statBitMap_address_i_V_U_vld_out;
reg    statBitMap_data_i_V_TVALID_int_regslice;
wire    statBitMap_data_i_V_TREADY_int_regslice;
wire    regslice_both_statBitMap_data_i_V_U_vld_out;
wire    regslice_both_readPSN_l_V_U_apdone_blk;
wire   [23:0] readPSN_l_V_TDATA_int_regslice;
wire    readPSN_l_V_TVALID_int_regslice;
reg    readPSN_l_V_TREADY_int_regslice;
wire    regslice_both_readPSN_l_V_U_ack_in;
reg    writePSN_l_V_TVALID_int_regslice;
wire    writePSN_l_V_TREADY_int_regslice;
wire    regslice_both_writePSN_l_V_U_vld_out;
reg    ap_condition_142;
reg    ap_condition_121;
reg    ap_condition_234;
reg    ap_condition_251;
reg    ap_condition_552;
reg    ap_condition_144;
reg    ap_condition_550;
reg    ap_condition_682;
reg    ap_condition_1536;
reg    ap_condition_1542;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b0;
#0 ap_rst_reg_1 = 1'b0;
#0 ap_rst_n_inv = 1'b0;
#0 state = 3'd0;
#0 MSNqp_V = 13'd0;
#0 writeToMSN_V = 64'd9223372036854775808;
#0 inputPacket_l_data_V = 512'd0;
#0 inputPacket_l_keep_V = 64'd0;
#0 inputPacket_l_last_V = 1'd0;
#0 writePSN_V = 24'd0;
#0 errorDataQP_V = 13'd0;
#0 addressInHBM_V = 26'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 state_load_reg_1262 = 3'd0;
#0 p_vld_reg_1292 = 1'd0;
#0 user_reg_1308 = 1'd0;
#0 icmp_ln70_reg_1323 = 1'd0;
#0 icmp_ln76_reg_1319 = 1'd0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 state_load_reg_1262_pp0_iter1_reg = 3'd0;
#0 p_vld_reg_1292_pp0_iter1_reg = 1'd0;
#0 user_reg_1308_pp0_iter1_reg = 1'd0;
#0 icmp_ln70_reg_1323_pp0_iter1_reg = 1'd0;
#0 icmp_ln76_reg_1319_pp0_iter1_reg = 1'd0;
#0 d_last_V_reg_1280 = 1'd0;
#0 d_last_V_reg_1280_pp0_iter1_reg = 1'd0;
#0 icmp_ln886_reg_1357 = 1'd0;
#0 icmp_ln886_reg_1357_pp0_iter1_reg = 1'd0;
#0 p_Val2_s_reg_1266 = 512'd0;
#0 inputPacket_l_keep_V_load_reg_1274 = 64'd0;
#0 writePSN_V_1_reg_1285 = 24'd0;
#0 packetHeader_qp_V_reg_1296 = 13'd0;
#0 tmp_1_reg_1302 = 4'd0;
#0 write_r_reg_1312 = 20'd0;
#0 ctx_qp_rdma_udp_port_src_reg_1327 = 16'd0;
#0 trunc_ln674_reg_1332 = 8'd0;
#0 p_Result_1_reg_1337 = 8'd0;
#0 p_Result_2_reg_1342 = 8'd0;
#0 p_Result_3_reg_1347 = 8'd0;
#0 local_qp_read_reg_1352 = 13'd0;
#0 h_time_V_reg_1376 = 64'd0;
#0 ap_phi_reg_pp0_iter1_state_flag_0_reg_526 = 1'd0;
#0 ap_phi_reg_pp0_iter1_storemerge_reg_539 = 2'd0;
#0 ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551 = 32'd0;
#0 ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560 = 32'd0;
#0 ap_phi_reg_pp0_iter1_state_flag_1_reg_569 = 1'd0;
#0 ap_phi_reg_pp0_iter1_state_new_1_reg_603 = 3'd0;
end

tx_write_dev_MSN_V #(
    .DataWidth( 64 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
MSN_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(MSN_V_address0),
    .ce0(MSN_V_ce0),
    .we0(MSN_V_we0),
    .d0(ap_sig_allocacmp_writeToMSN_V_load),
    .q0(MSN_V_q0)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_data_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_s_TDATA),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_data_V_U_ack_in),
    .data_out(data_s_TDATA_int_regslice),
    .vld_out(data_s_TVALID_int_regslice),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_s_TKEEP),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_keep_V_U_ack_in),
    .data_out(data_s_TKEEP_int_regslice),
    .vld_out(regslice_both_data_s_V_keep_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_data_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_s_TSTRB),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_strb_V_U_ack_in),
    .data_out(data_s_TSTRB_int_regslice),
    .vld_out(regslice_both_data_s_V_strb_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_data_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_s_TLAST),
    .vld_in(data_s_TVALID),
    .ack_in(regslice_both_data_s_V_last_V_U_ack_in),
    .data_out(data_s_TLAST_int_regslice),
    .vld_out(regslice_both_data_s_V_last_V_U_vld_out),
    .ack_out(data_s_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 128 ))
regslice_both_header_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(header_V_TDATA),
    .vld_in(header_V_TVALID),
    .ack_in(regslice_both_header_V_U_ack_in),
    .data_out(header_V_TDATA_int_regslice),
    .vld_out(header_V_TVALID_int_regslice),
    .ack_out(header_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_header_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 8 ))
regslice_both_statOut_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd2),
    .vld_in(statOut_s_V_TVALID_int_regslice),
    .ack_in(statOut_s_V_TREADY_int_regslice),
    .data_out(statOut_s_V_TDATA),
    .vld_out(regslice_both_statOut_s_V_U_vld_out),
    .ack_out(statOut_s_V_TREADY),
    .apdone_blk(regslice_both_statOut_s_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_payloadOut_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_Val2_s_reg_1266),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(payloadOut_s_TREADY_int_regslice),
    .data_out(payloadOut_s_TDATA),
    .vld_out(regslice_both_payloadOut_s_V_data_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_payloadOut_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_l_keep_V_load_reg_1274),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_keep_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TKEEP),
    .vld_out(regslice_both_payloadOut_s_V_keep_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_payloadOut_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(64'd0),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_strb_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TSTRB),
    .vld_out(regslice_both_payloadOut_s_V_strb_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_payloadOut_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(payloadOut_s_TLAST_int_regslice),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_last_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TLAST),
    .vld_out(regslice_both_payloadOut_s_V_last_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 13 ))
regslice_both_payloadOut_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(13'd0),
    .vld_in(payloadOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_payloadOut_s_V_dest_V_U_ack_in_dummy),
    .data_out(payloadOut_s_TDEST),
    .vld_out(regslice_both_payloadOut_s_V_dest_V_U_vld_out),
    .ack_out(payloadOut_s_TREADY),
    .apdone_blk(regslice_both_payloadOut_s_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 320 ))
regslice_both_sq_frame_context_s_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(sq_frame_context_s_V_TDATA_int_regslice),
    .vld_in(sq_frame_context_s_V_TVALID_int_regslice),
    .ack_in(sq_frame_context_s_V_TREADY_int_regslice),
    .data_out(sq_frame_context_s_V_TDATA),
    .vld_out(regslice_both_sq_frame_context_s_V_U_vld_out),
    .ack_out(sq_frame_context_s_V_TREADY),
    .apdone_blk(regslice_both_sq_frame_context_s_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_headerHBM_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(headerHBM_TDATA_int_regslice),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(headerHBM_TREADY_int_regslice),
    .data_out(headerHBM_TDATA),
    .vld_out(regslice_both_headerHBM_V_data_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_keep_V_U_ack_in_dummy),
    .data_out(headerHBM_TKEEP),
    .vld_out(regslice_both_headerHBM_V_keep_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_strb_V_U_ack_in_dummy),
    .data_out(headerHBM_TSTRB),
    .vld_out(regslice_both_headerHBM_V_strb_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_headerHBM_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_last_V_U_ack_in_dummy),
    .data_out(headerHBM_TLAST),
    .vld_out(regslice_both_headerHBM_V_last_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_headerHBM_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(headerHBM_TDEST_int_regslice),
    .vld_in(headerHBM_TVALID_int_regslice),
    .ack_in(regslice_both_headerHBM_V_dest_V_U_ack_in_dummy),
    .data_out(headerHBM_TDEST),
    .vld_out(regslice_both_headerHBM_V_dest_V_U_vld_out),
    .ack_out(headerHBM_TREADY),
    .apdone_blk(regslice_both_headerHBM_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_dataHBM_0_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataHBM_0_TDATA_int_regslice),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(dataHBM_0_TREADY_int_regslice),
    .data_out(dataHBM_0_TDATA),
    .vld_out(regslice_both_dataHBM_0_V_data_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_keep_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TKEEP),
    .vld_out(regslice_both_dataHBM_0_V_keep_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_strb_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TSTRB),
    .vld_out(regslice_both_dataHBM_0_V_strb_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataHBM_0_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd0),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_last_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TLAST),
    .vld_out(regslice_both_dataHBM_0_V_last_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_0_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataHBM_0_TDEST_int_regslice),
    .vld_in(dataHBM_0_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_0_V_dest_V_U_ack_in_dummy),
    .data_out(dataHBM_0_TDEST),
    .vld_out(regslice_both_dataHBM_0_V_dest_V_U_vld_out),
    .ack_out(dataHBM_0_TREADY),
    .apdone_blk(regslice_both_dataHBM_0_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 256 ))
regslice_both_dataHBM_1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataHBM_1_TDATA_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(dataHBM_1_TREADY_int_regslice),
    .data_out(dataHBM_1_TDATA),
    .vld_out(regslice_both_dataHBM_1_V_data_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_keep_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TKEEP),
    .vld_out(regslice_both_dataHBM_1_V_keep_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(32'd0),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_strb_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TSTRB),
    .vld_out(regslice_both_dataHBM_1_V_strb_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataHBM_1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataHBM_1_TLAST_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_last_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TLAST),
    .vld_out(regslice_both_dataHBM_1_V_last_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 32 ))
regslice_both_dataHBM_1_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataHBM_1_TDEST_int_regslice),
    .vld_in(dataHBM_1_TVALID_int_regslice),
    .ack_in(regslice_both_dataHBM_1_V_dest_V_U_ack_in_dummy),
    .data_out(dataHBM_1_TDEST),
    .vld_out(regslice_both_dataHBM_1_V_dest_V_U_vld_out),
    .ack_out(dataHBM_1_TREADY),
    .apdone_blk(regslice_both_dataHBM_1_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 512 ))
regslice_both_errorDataOut_s_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(p_Val2_s_reg_1266),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(errorDataOut_s_TREADY_int_regslice),
    .data_out(errorDataOut_s_TDATA),
    .vld_out(regslice_both_errorDataOut_s_V_data_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_data_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_errorDataOut_s_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(inputPacket_l_keep_V_load_reg_1274),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_keep_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TKEEP),
    .vld_out(regslice_both_errorDataOut_s_V_keep_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_keep_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 64 ))
regslice_both_errorDataOut_s_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(64'd0),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_strb_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TSTRB),
    .vld_out(regslice_both_errorDataOut_s_V_strb_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_strb_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 1 ))
regslice_both_errorDataOut_s_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(d_last_V_reg_1280),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_last_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TLAST),
    .vld_out(regslice_both_errorDataOut_s_V_last_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_last_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 13 ))
regslice_both_errorDataOut_s_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(errorDataQP_V),
    .vld_in(errorDataOut_s_TVALID_int_regslice),
    .ack_in(regslice_both_errorDataOut_s_V_dest_V_U_ack_in_dummy),
    .data_out(errorDataOut_s_TDEST),
    .vld_out(regslice_both_errorDataOut_s_V_dest_V_U_vld_out),
    .ack_out(errorDataOut_s_TREADY),
    .apdone_blk(regslice_both_errorDataOut_s_V_dest_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_statBitMap_address_i_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(statBitMap_address_i_V_TDATA_int_regslice),
    .vld_in(statBitMap_address_i_V_TVALID_int_regslice),
    .ack_in(statBitMap_address_i_V_TREADY_int_regslice),
    .data_out(statBitMap_address_i_V_TDATA),
    .vld_out(regslice_both_statBitMap_address_i_V_U_vld_out),
    .ack_out(statBitMap_address_i_V_TREADY),
    .apdone_blk(regslice_both_statBitMap_address_i_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 8 ))
regslice_both_statBitMap_data_i_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(8'd3),
    .vld_in(statBitMap_data_i_V_TVALID_int_regslice),
    .ack_in(statBitMap_data_i_V_TREADY_int_regslice),
    .data_out(statBitMap_data_i_V_TDATA),
    .vld_out(regslice_both_statBitMap_data_i_V_U_vld_out),
    .ack_out(statBitMap_data_i_V_TREADY),
    .apdone_blk(regslice_both_statBitMap_data_i_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_readPSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(readPSN_l_V_TDATA),
    .vld_in(readPSN_l_V_TVALID),
    .ack_in(regslice_both_readPSN_l_V_U_ack_in),
    .data_out(readPSN_l_V_TDATA_int_regslice),
    .vld_out(readPSN_l_V_TVALID_int_regslice),
    .ack_out(readPSN_l_V_TREADY_int_regslice),
    .apdone_blk(regslice_both_readPSN_l_V_U_apdone_blk)
);

tx_write_dev_regslice_both #(
    .DataWidth( 24 ))
regslice_both_writePSN_l_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(writePSN_V_1_reg_1285),
    .vld_in(writePSN_l_V_TVALID_int_regslice),
    .ack_in(writePSN_l_V_TREADY_int_regslice),
    .data_out(writePSN_l_V_TDATA),
    .vld_out(regslice_both_writePSN_l_V_U_vld_out),
    .ack_out(writePSN_l_V_TREADY),
    .apdone_blk(regslice_both_writePSN_l_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        MSNqp_V <= 13'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
            MSNqp_V <= {{header_V_TDATA_int_regslice[44:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        addressInHBM_V <= 26'd0;
    end else begin
        if ((1'b1 == ap_condition_552)) begin
            if ((1'b1 == ap_condition_251)) begin
                addressInHBM_V <= add_ln691_3_fu_1244_p2;
            end else if ((1'b1 == ap_condition_234)) begin
                addressInHBM_V <= add_ln691_fu_1035_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551 <= 32'd0;
    end else begin
        if ((1'b1 == ap_condition_550)) begin
            if ((1'b1 == ap_condition_144)) begin
                ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551 <= {{header_V_TDATA_int_regslice[127:96]}};
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551 <= ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_reg_551;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560 <= 32'd0;
    end else begin
        if ((1'b1 == ap_condition_550)) begin
            if ((1'b1 == ap_condition_144)) begin
                ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560 <= {{header_V_TDATA_int_regslice[95:64]}};
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560 <= ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_reg_560;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_state_flag_0_reg_526 <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_550)) begin
            if ((ap_sig_allocacmp_state_load == 3'd1)) begin
                ap_phi_reg_pp0_iter1_state_flag_0_reg_526 <= 1'd1;
            end else if ((ap_sig_allocacmp_state_load == 3'd3)) begin
                ap_phi_reg_pp0_iter1_state_flag_0_reg_526 <= 1'd0;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_state_flag_0_reg_526 <= ap_phi_reg_pp0_iter0_state_flag_0_reg_526;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_state_flag_1_reg_569 <= 1'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd2)) | ((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd1)) | ((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
            ap_phi_reg_pp0_iter1_state_flag_1_reg_569 <= 1'd1;
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (p_vld_fu_712_p1 == 1'd0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln76_fu_891_p2 == 1'd1) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd1) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & ((state_load_load_fu_673_p1 == 3'd5) | ((state_load_load_fu_673_p1 == 3'd6) | (state_load_load_fu_673_p1 == 3'd7)))))) begin
            ap_phi_reg_pp0_iter1_state_flag_1_reg_569 <= 1'd0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
            ap_phi_reg_pp0_iter1_state_flag_1_reg_569 <= ap_phi_reg_pp0_iter0_state_flag_1_reg_569;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_state_new_1_reg_603 <= 3'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
            ap_phi_reg_pp0_iter1_state_new_1_reg_603 <= 3'd2;
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd2)) | ((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd1)) | ((d_last_V_load_fu_694_p1 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd3)))))) begin
            ap_phi_reg_pp0_iter1_state_new_1_reg_603 <= 3'd0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4))))) begin
            ap_phi_reg_pp0_iter1_state_new_1_reg_603 <= 3'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
            ap_phi_reg_pp0_iter1_state_new_1_reg_603 <= ap_phi_reg_pp0_iter0_state_new_1_reg_603;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_539 <= 2'd0;
    end else begin
        if ((1'b1 == ap_condition_550)) begin
            if ((1'b1 == ap_condition_144)) begin
                ap_phi_reg_pp0_iter1_storemerge_reg_539 <= 2'd3;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_storemerge_reg_539 <= ap_phi_reg_pp0_iter0_storemerge_reg_539;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_n_inv <= 1'b0;
    end else begin
        ap_rst_n_inv <= ap_rst_reg_1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_reg_1 <= 1'b0;
    end else begin
        ap_rst_reg_1 <= ap_rst_reg_2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_rst_reg_2 <= 1'b0;
    end else begin
        ap_rst_reg_2 <= ~ap_rst_n;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ctx_qp_rdma_udp_port_src_reg_1327 <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            ctx_qp_rdma_udp_port_src_reg_1327 <= req_rdma_udp_port_i;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_last_V_reg_1280 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            d_last_V_reg_1280 <= inputPacket_l_last_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        d_last_V_reg_1280_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            d_last_V_reg_1280_pp0_iter1_reg <= d_last_V_reg_1280;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        errorDataQP_V <= 13'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
            errorDataQP_V <= {{header_V_TDATA_int_regslice[44:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        h_time_V_reg_1376 <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            h_time_V_reg_1376 <= currTime;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln70_reg_1323 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln70_reg_1323 <= icmp_ln70_fu_897_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln70_reg_1323_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln70_reg_1323_pp0_iter1_reg <= icmp_ln70_reg_1323;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln76_reg_1319 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln76_reg_1319 <= icmp_ln76_fu_891_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln76_reg_1319_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln76_reg_1319_pp0_iter1_reg <= icmp_ln76_reg_1319;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln886_reg_1357 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln886_reg_1357 <= icmp_ln886_fu_937_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln886_reg_1357_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            icmp_ln886_reg_1357_pp0_iter1_reg <= icmp_ln886_reg_1357;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inputPacket_l_data_V <= 512'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd1)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
            inputPacket_l_data_V <= data_s_TDATA_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inputPacket_l_keep_V <= 64'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd1)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
            inputPacket_l_keep_V <= data_s_TKEEP_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inputPacket_l_keep_V_load_reg_1274 <= 64'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            inputPacket_l_keep_V_load_reg_1274 <= inputPacket_l_keep_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        inputPacket_l_last_V <= 1'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd1)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
            inputPacket_l_last_V <= data_s_TLAST_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        local_qp_read_reg_1352 <= 13'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            local_qp_read_reg_1352 <= local_qp;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_Result_1_reg_1337 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            p_Result_1_reg_1337 <= {{ip_subnet[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_Result_2_reg_1342 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            p_Result_2_reg_1342 <= {{ip_subnet[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_Result_3_reg_1347 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            p_Result_3_reg_1347 <= {{ip_subnet[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_Val2_s_reg_1266 <= 512'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_Val2_s_reg_1266 <= inputPacket_l_data_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld_reg_1292 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_vld_reg_1292 <= header_V_read_nbread_fu_314_p2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_vld_reg_1292_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_vld_reg_1292_pp0_iter1_reg <= p_vld_reg_1292;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        packetHeader_qp_V_reg_1296 <= 13'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            packetHeader_qp_V_reg_1296 <= {{header_V_TDATA_int_regslice[44:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state <= 3'd0;
    end else begin
        if (((ap_phi_mux_state_flag_1_phi_fu_574_p18 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            state <= ap_phi_mux_state_new_1_phi_fu_610_p18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_load_reg_1262 <= 3'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            state_load_reg_1262 <= ap_sig_allocacmp_state_load;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        state_load_reg_1262_pp0_iter1_reg <= 3'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            state_load_reg_1262_pp0_iter1_reg <= state_load_reg_1262;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_1_reg_1302 <= 4'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            tmp_1_reg_1302 <= {{header_V_TDATA_int_regslice[57:54]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        trunc_ln674_reg_1332 <= 8'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            trunc_ln674_reg_1332 <= trunc_ln674_fu_903_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        user_reg_1308 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            user_reg_1308 <= user_fu_755_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        user_reg_1308_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            user_reg_1308_pp0_iter1_reg <= user_reg_1308;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        writePSN_V <= 24'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0))))) begin
            writePSN_V <= add_ln691_2_fu_980_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        writePSN_V_1_reg_1285 <= 24'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            writePSN_V_1_reg_1285 <= writePSN_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        writeToMSN_V <= 64'd9223372036854775808;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            if ((1'b1 == ap_condition_1542)) begin
                writeToMSN_V <= 64'd9223372036854775808;
            end else if ((1'b1 == ap_condition_1536)) begin
                writeToMSN_V <= add_ln691_1_fu_1108_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        write_r_reg_1312 <= 20'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            write_r_reg_1312 <= write_r_fu_765_p1;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_121)) begin
        if ((1'b1 == ap_condition_142)) begin
            MSN_V_address0 = zext_ln534_2_fu_975_p1;
        end else if ((ap_sig_allocacmp_state_load == 3'd1)) begin
            MSN_V_address0 = zext_ln534_fu_703_p1;
        end else if ((ap_sig_allocacmp_state_load == 3'd2)) begin
            MSN_V_address0 = zext_ln534_1_fu_698_p1;
        end else begin
            MSN_V_address0 = 'bx;
        end
    end else begin
        MSN_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        MSN_V_ce0 = 1'b1;
    end else begin
        MSN_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        MSN_V_we0 = 1'b1;
    end else begin
        MSN_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0))) begin
        ap_phi_mux_ctx_rdma_va_high_or_ack_V_phi_fu_554_p4 = {{MSN_V_q0[63:32]}};
    end else begin
        ap_phi_mux_ctx_rdma_va_high_or_ack_V_phi_fu_554_p4 = ap_phi_reg_pp0_iter1_ctx_rdma_va_high_or_ack_V_reg_551;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0))) begin
        ap_phi_mux_ctx_rdma_va_low_V_phi_fu_563_p4 = trunc_ln674_2_fu_1120_p1;
    end else begin
        ap_phi_mux_ctx_rdma_va_low_V_phi_fu_563_p4 = ap_phi_reg_pp0_iter1_ctx_rdma_va_low_V_reg_560;
    end
end

always @ (*) begin
    if ((((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))) begin
        ap_phi_mux_state_flag_1_phi_fu_574_p18 = 1'd1;
    end else if ((((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)))) begin
        ap_phi_mux_state_flag_1_phi_fu_574_p18 = ap_phi_reg_pp0_iter1_state_flag_0_reg_526;
    end else begin
        ap_phi_mux_state_flag_1_phi_fu_574_p18 = ap_phi_reg_pp0_iter1_state_flag_1_reg_569;
    end
end

always @ (*) begin
    if ((((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))) begin
        ap_phi_mux_state_new_1_phi_fu_610_p18 = zext_ln52_fu_1136_p1;
    end else if ((((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)))) begin
        ap_phi_mux_state_new_1_phi_fu_610_p18 = 3'd3;
    end else begin
        ap_phi_mux_state_new_1_phi_fu_610_p18 = ap_phi_reg_pp0_iter1_state_new_1_reg_603;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0))) begin
        ap_phi_mux_storemerge_phi_fu_543_p4 = 2'd1;
    end else begin
        ap_phi_mux_storemerge_phi_fu_543_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_539;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((ap_phi_mux_state_flag_1_phi_fu_574_p18 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_state_load = ap_phi_mux_state_new_1_phi_fu_610_p18;
    end else begin
        ap_sig_allocacmp_state_load = state;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_writeToMSN_V_load = add_ln691_1_fu_1108_p2;
    end else begin
        ap_sig_allocacmp_writeToMSN_V_load = writeToMSN_V;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((state_load_reg_1262_pp0_iter1_reg == 3'd1) | (state_load_reg_1262_pp0_iter1_reg == 3'd3))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((state_load_reg_1262 == 3'd1) | (state_load_reg_1262 == 3'd3))))) begin
        dataHBM_0_TDATA_blk_n = dataHBM_0_TREADY_int_regslice;
    end else begin
        dataHBM_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op189_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dataHBM_0_TVALID_int_regslice = 1'b1;
    end else begin
        dataHBM_0_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd3)))))) begin
        dataHBM_1_TDATA_blk_n = dataHBM_1_TREADY_int_regslice;
    end else begin
        dataHBM_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((ap_predicate_op198_write_state2 == 1'b1)) begin
            dataHBM_1_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op193_write_state2 == 1'b1)) begin
            dataHBM_1_TLAST_int_regslice = 1'd0;
        end else begin
            dataHBM_1_TLAST_int_regslice = 'bx;
        end
    end else begin
        dataHBM_1_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op198_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op193_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dataHBM_1_TVALID_int_regslice = 1'b1;
    end else begin
        dataHBM_1_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd1)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)))))) begin
        data_s_TDATA_blk_n = data_s_TVALID_int_regslice;
    end else begin
        data_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op174_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op159_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op95_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op82_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1)))) begin
        data_s_TREADY_int_regslice = 1'b1;
    end else begin
        data_s_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((state_load_reg_1262_pp0_iter1_reg == 3'd2) | (state_load_reg_1262_pp0_iter1_reg == 3'd4))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((state_load_reg_1262 == 3'd2) | (state_load_reg_1262 == 3'd4))))) begin
        errorDataOut_s_TDATA_blk_n = errorDataOut_s_TREADY_int_regslice;
    end else begin
        errorDataOut_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op183_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        errorDataOut_s_TVALID_int_regslice = 1'b1;
    end else begin
        errorDataOut_s_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))))) begin
        headerHBM_TDATA_blk_n = headerHBM_TREADY_int_regslice;
    end else begin
        headerHBM_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op231_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        headerHBM_TVALID_int_regslice = 1'b1;
    end else begin
        headerHBM_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (header_V_TVALID_int_regslice == 1'b1) & (1'b1 == 1'b1))) begin
        header_V_TREADY_int_regslice = 1'b1;
    end else begin
        header_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd3)))))) begin
        payloadOut_s_TDATA_blk_n = payloadOut_s_TREADY_int_regslice;
    end else begin
        payloadOut_s_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((ap_predicate_op199_write_state2 == 1'b1)) begin
            payloadOut_s_TLAST_int_regslice = 1'd1;
        end else if ((ap_predicate_op194_write_state2 == 1'b1)) begin
            payloadOut_s_TLAST_int_regslice = 1'd0;
        end else begin
            payloadOut_s_TLAST_int_regslice = 'bx;
        end
    end else begin
        payloadOut_s_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op199_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op194_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        payloadOut_s_TVALID_int_regslice = 1'b1;
    end else begin
        payloadOut_s_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        readPSN_l_V_TDATA_blk_n = readPSN_l_V_TVALID_int_regslice;
    end else begin
        readPSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        readPSN_l_V_TREADY_int_regslice = 1'b1;
    end else begin
        readPSN_l_V_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))))) begin
        sq_frame_context_s_V_TDATA_blk_n = sq_frame_context_s_V_TREADY_int_regslice;
    end else begin
        sq_frame_context_s_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op234_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sq_frame_context_s_V_TVALID_int_regslice = 1'b1;
    end else begin
        sq_frame_context_s_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))))) begin
        statBitMap_address_i_V_TDATA_blk_n = statBitMap_address_i_V_TREADY_int_regslice;
    end else begin
        statBitMap_address_i_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op220_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statBitMap_address_i_V_TVALID_int_regslice = 1'b1;
    end else begin
        statBitMap_address_i_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))))) begin
        statBitMap_data_i_V_TDATA_blk_n = statBitMap_data_i_V_TREADY_int_regslice;
    end else begin
        statBitMap_data_i_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op221_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statBitMap_data_i_V_TVALID_int_regslice = 1'b1;
    end else begin
        statBitMap_data_i_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln76_reg_1319_pp0_iter1_reg == 1'd1) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd1) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((icmp_ln76_reg_1319 == 1'd1) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd1) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)))))) begin
        statOut_s_V_TDATA_blk_n = statOut_s_V_TREADY_int_regslice;
    end else begin
        statOut_s_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op238_write_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        statOut_s_V_TVALID_int_regslice = 1'b1;
    end else begin
        statOut_s_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1262 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        writePSN_l_V_TDATA_blk_n = writePSN_l_V_TREADY_int_regslice;
    end else begin
        writePSN_l_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (state_load_reg_1262 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        writePSN_l_V_TVALID_int_regslice = 1'b1;
    end else begin
        writePSN_l_V_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HBMaddress_V_fu_1192_p4 = {{ret_1_fu_1186_p2[30:5]}};

assign add_ln691_1_fu_1108_p2 = (p_Result_s_fu_1098_p4 + 64'd1);

assign add_ln691_2_fu_980_p2 = (writePSN_V + 24'd1);

assign add_ln691_3_fu_1244_p2 = (HBMaddress_V_fu_1192_p4 + 26'd1);

assign add_ln691_fu_1035_p2 = (addressInHBM_V + 26'd2);

assign and_ln878_1_fu_855_p2 = (xor_ln878_fu_849_p2 & icmp_ln878_1_fu_775_p2);

assign and_ln878_fu_843_p2 = (icmp_ln878_fu_769_p2 & icmp_ln878_1_fu_775_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | ((ap_predicate_op255_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op253_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op252_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op251_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op249_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op247_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op246_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state3 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op244_write_state3 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op238_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op231_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op221_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op220_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op199_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op198_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op194_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op193_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op189_write_state2 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op183_write_state2 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op174_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op159_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op95_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op82_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (ap_sig_allocacmp_state_load == 3'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((ap_predicate_op255_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op253_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op252_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op251_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op249_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op247_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op246_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state3 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op244_write_state3 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op238_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op231_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op221_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op220_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op199_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op198_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op194_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op193_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op189_write_state2 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op183_write_state2 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op174_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op159_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op95_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op82_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (ap_sig_allocacmp_state_load == 3'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((ap_predicate_op255_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op253_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op252_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op251_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op249_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op247_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op246_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state3 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op244_write_state3 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((ap_predicate_op238_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op231_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op221_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op220_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op199_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op198_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op194_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op193_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op189_write_state2 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op183_write_state2 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & (((ap_predicate_op174_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op159_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op95_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op82_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (ap_sig_allocacmp_state_load == 3'd0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op174_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op159_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op95_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op82_read_state1 == 1'b1) & (data_s_TVALID_int_regslice == 1'b0)) | ((readPSN_l_V_TVALID_int_regslice == 1'b0) & (ap_sig_allocacmp_state_load == 3'd0)));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op238_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op231_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op221_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op220_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op199_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op198_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op194_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op193_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op189_write_state2 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op183_write_state2 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op238_write_state2 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op234_write_state2 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op231_write_state2 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op221_write_state2 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op220_write_state2 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op199_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op198_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op194_write_state2 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op193_write_state2 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op189_write_state2 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op183_write_state2 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262 == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = (((ap_predicate_op255_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op253_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op252_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op251_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op249_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op247_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op246_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state3 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op244_write_state3 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_writePSN_l_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_data_i_V_U_apdone_blk == 1'b1) | (regslice_both_statBitMap_address_i_V_U_apdone_blk == 1'b1) | (regslice_both_errorDataOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_1_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_dataHBM_0_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_headerHBM_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_sq_frame_context_s_V_U_apdone_blk == 1'b1) | (regslice_both_payloadOut_s_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_statOut_s_V_U_apdone_blk == 1'b1) | ((ap_predicate_op255_write_state3 == 1'b1) & (statOut_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op254_write_state3 == 1'b1) & (sq_frame_context_s_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op253_write_state3 == 1'b1) & (headerHBM_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op252_write_state3 == 1'b1) & (statBitMap_data_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op251_write_state3 == 1'b1) & (statBitMap_address_i_V_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op249_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op248_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op247_write_state3 == 1'b1) & (payloadOut_s_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op246_write_state3 == 1'b1) & (dataHBM_1_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op245_write_state3 == 1'b1) & (dataHBM_0_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op244_write_state3 == 1'b1) & (errorDataOut_s_TREADY_int_regslice == 1'b0)) | ((state_load_reg_1262_pp0_iter1_reg == 3'd0) & (writePSN_l_V_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_121 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_142 = ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0));
end

always @ (*) begin
    ap_condition_144 = ((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0));
end

always @ (*) begin
    ap_condition_1536 = ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_1542 = ((icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_234 = (((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)));
end

always @ (*) begin
    ap_condition_251 = (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_condition_550 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_552 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_682 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_ctx_rdma_va_high_or_ack_V_reg_551 = 'bx;

assign ap_phi_reg_pp0_iter0_ctx_rdma_va_low_V_reg_560 = 'bx;

assign ap_phi_reg_pp0_iter0_state_flag_0_reg_526 = 'bx;

assign ap_phi_reg_pp0_iter0_state_flag_1_reg_569 = 'bx;

assign ap_phi_reg_pp0_iter0_state_new_1_reg_603 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge_reg_539 = 'bx;

always @ (*) begin
    ap_predicate_op159_read_state1 = ((icmp_ln886_fu_937_p2 == 1'd1) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0));
end

always @ (*) begin
    ap_predicate_op174_read_state1 = (((icmp_ln886_fu_937_p2 == 1'd0) & (icmp_ln76_fu_891_p2 == 1'd0) & (user_fu_755_p2 == 1'd0) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)) | ((icmp_ln70_fu_897_p2 == 1'd0) & (user_fu_755_p2 == 1'd1) & (header_V_read_nbread_fu_314_p2_0 == 1'd1) & (ap_sig_allocacmp_state_load == 3'd0)));
end

always @ (*) begin
    ap_predicate_op183_write_state2 = ((state_load_reg_1262 == 3'd2) | (state_load_reg_1262 == 3'd4));
end

always @ (*) begin
    ap_predicate_op189_write_state2 = ((state_load_reg_1262 == 3'd1) | (state_load_reg_1262 == 3'd3));
end

always @ (*) begin
    ap_predicate_op193_write_state2 = (((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)));
end

always @ (*) begin
    ap_predicate_op194_write_state2 = (((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd0) & (state_load_reg_1262 == 3'd3)));
end

always @ (*) begin
    ap_predicate_op198_write_state2 = (((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd3)));
end

always @ (*) begin
    ap_predicate_op199_write_state2 = (((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd1)) | ((d_last_V_reg_1280 == 1'd1) & (state_load_reg_1262 == 3'd3)));
end

always @ (*) begin
    ap_predicate_op220_write_state2 = (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op221_write_state2 = (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op231_write_state2 = (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op234_write_state2 = (((icmp_ln886_reg_1357 == 1'd0) & (icmp_ln76_reg_1319 == 1'd0) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd0) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op238_write_state2 = (((icmp_ln76_reg_1319 == 1'd1) & (user_reg_1308 == 1'd0) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)) | ((icmp_ln70_reg_1323 == 1'd1) & (user_reg_1308 == 1'd1) & (p_vld_reg_1292 == 1'd1) & (state_load_reg_1262 == 3'd0)));
end

always @ (*) begin
    ap_predicate_op244_write_state3 = ((state_load_reg_1262_pp0_iter1_reg == 3'd2) | (state_load_reg_1262_pp0_iter1_reg == 3'd4));
end

always @ (*) begin
    ap_predicate_op245_write_state3 = ((state_load_reg_1262_pp0_iter1_reg == 3'd1) | (state_load_reg_1262_pp0_iter1_reg == 3'd3));
end

always @ (*) begin
    ap_predicate_op246_write_state3 = (((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)));
end

always @ (*) begin
    ap_predicate_op247_write_state3 = (((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd0) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)));
end

always @ (*) begin
    ap_predicate_op248_write_state3 = (((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)));
end

always @ (*) begin
    ap_predicate_op249_write_state3 = (((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd1)) | ((d_last_V_reg_1280_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd3)));
end

always @ (*) begin
    ap_predicate_op251_write_state3 = (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op252_write_state3 = (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op253_write_state3 = (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op254_write_state3 = (((icmp_ln886_reg_1357_pp0_iter1_reg == 1'd0) & (icmp_ln76_reg_1319_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd0) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op255_write_state3 = (((icmp_ln76_reg_1319_pp0_iter1_reg == 1'd1) & (user_reg_1308_pp0_iter1_reg == 1'd0) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)) | ((icmp_ln70_reg_1323_pp0_iter1_reg == 1'd1) & (user_reg_1308_pp0_iter1_reg == 1'd1) & (p_vld_reg_1292_pp0_iter1_reg == 1'd1) & (state_load_reg_1262_pp0_iter1_reg == 3'd0)));
end

always @ (*) begin
    ap_predicate_op82_read_state1 = (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd2)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd4)));
end

always @ (*) begin
    ap_predicate_op95_read_state1 = (((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd1)) | ((inputPacket_l_last_V == 1'd0) & (ap_sig_allocacmp_state_load == 3'd3)));
end

assign d_last_V_load_fu_694_p1 = inputPacket_l_last_V;

assign dataHBM_0_TDATA_int_regslice = p_Val2_s_reg_1266[255:0];

assign dataHBM_0_TDEST_int_regslice = addressInHBM_V;

assign dataHBM_0_TVALID = regslice_both_dataHBM_0_V_data_V_U_vld_out;

assign dataHBM_1_TDATA_int_regslice = {{p_Val2_s_reg_1266[511:256]}};

assign dataHBM_1_TDEST_int_regslice = headerToHBM_dest_V_1_fu_1024_p2;

assign dataHBM_1_TVALID = regslice_both_dataHBM_1_V_data_V_U_vld_out;

assign data_s_TREADY = regslice_both_data_s_V_data_V_U_ack_in;

assign errorDataOut_s_TVALID = regslice_both_errorDataOut_s_V_data_V_U_vld_out;

assign headerHBM_TDATA_int_regslice = p_Result_11_fu_1145_p8;

assign headerHBM_TDEST_int_regslice = HBMaddress_V_fu_1192_p4;

assign headerHBM_TVALID = regslice_both_headerHBM_V_data_V_U_vld_out;

assign headerToHBM_dest_V_1_fu_1024_p2 = (zext_ln131_fu_1010_p1 + 27'd1);

assign header_V_TREADY = regslice_both_header_V_U_ack_in;

assign header_V_read_nbread_fu_314_p2_0 = header_V_TVALID_int_regslice;

assign icmp_ln70_fu_897_p2 = (($signed(select_ln878_2_fu_883_p3) > $signed(22'd1048559)) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_891_p2 = (($signed(select_ln878_2_fu_883_p3) > $signed(22'd1048574)) ? 1'b1 : 1'b0);

assign icmp_ln878_1_fu_775_p2 = ((write_r_fu_765_p1 < read_r_fu_761_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_769_p2 = ((writePSN_V < readPSN_l_V_TDATA_int_regslice) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_937_p2 = ((packetHeader_numberOfRetranssmitions_V_fu_724_p4 > numberOfretranssmisionsForressetingMSN) ? 1'b1 : 1'b0);

assign or_ln1_fu_815_p3 = {{1'd1}, {read_r_fu_761_p1}};

assign or_ln_fu_789_p3 = {{1'd1}, {write_r_fu_765_p1}};

assign p_Result_10_fu_1047_p5 = {{{{trunc_ln674_reg_1332}, {p_Result_1_reg_1337}}, {p_Result_2_reg_1342}}, {p_Result_3_reg_1347}};

assign p_Result_11_fu_1145_p8 = {{{{{{{h_time_V_reg_1376}, {packetHeader_qp_V_reg_1296}}, {tmp_1_reg_1302}}, {6'd0}}, {writePSN_V_1_reg_1285}}, {ap_phi_mux_ctx_rdma_va_high_or_ack_V_phi_fu_554_p4}}, {ap_phi_mux_ctx_rdma_va_low_V_phi_fu_563_p4}};

assign p_Result_6_fu_1068_p4 = {{val_V_1_fu_1058_p2[15:8]}};

assign p_Result_7_fu_1078_p4 = {{val_V_1_fu_1058_p2[23:16]}};

assign p_Result_8_fu_1088_p4 = {{val_V_1_fu_1058_p2[31:24]}};

assign p_Result_s_fu_1098_p4 = {|(1'd0), MSN_V_q0[63 - 1:0]};

assign p_vld_fu_712_p1 = header_V_read_nbread_fu_314_p2_0;

assign packetHeader_numberOfRetranssmitions_V_fu_724_p4 = {{header_V_TDATA_int_regslice[31:16]}};

assign packetHeader_qp_V_fu_734_p4 = {{header_V_TDATA_int_regslice[44:32]}};

assign packetHeader_type_V_fu_720_p1 = header_V_TDATA_int_regslice[1:0];

assign payloadOut_s_TVALID = regslice_both_payloadOut_s_V_data_V_U_vld_out;

assign readPSN_l_V_TREADY = regslice_both_readPSN_l_V_U_ack_in;

assign read_r_fu_761_p1 = readPSN_l_V_TDATA_int_regslice[19:0];

assign ret_1_fu_1186_p2 = (zext_ln1345_fu_1171_p1 + zext_ln1345_1_fu_1182_p1);

assign ret_fu_833_p2 = (zext_ln1347_1_fu_785_p1 - zext_ln44_fu_801_p1);

assign select_ln878_1_fu_875_p3 = ((and_ln878_fu_843_p2[0:0] == 1'b1) ? sub_ln44_fu_809_p2 : sext_ln878_fu_839_p1);

assign select_ln878_2_fu_883_p3 = ((xor_ln878_1_fu_869_p2[0:0] == 1'b1) ? select_ln878_fu_861_p3 : select_ln878_1_fu_875_p3);

assign select_ln878_fu_861_p3 = ((and_ln878_1_fu_855_p2[0:0] == 1'b1) ? sub_ln44_fu_809_p2 : sub_ln46_fu_827_p2);

assign sext_ln878_fu_839_p1 = $signed(ret_fu_833_p2);

assign shl_ln1345_1_fu_1175_p3 = {{write_r_reg_1312}, {5'd0}};

assign shl_ln_fu_1164_p3 = {{write_r_reg_1312}, {10'd0}};

assign sq_frame_context_s_V_TDATA_int_regslice = (tmp7_fu_1207_p16 | 320'd321574268017491360471842816);

assign sq_frame_context_s_V_TVALID = regslice_both_sq_frame_context_s_V_U_vld_out;

assign statBitMap_address_i_V_TDATA_int_regslice = write_r_reg_1312;

assign statBitMap_address_i_V_TVALID = regslice_both_statBitMap_address_i_V_U_vld_out;

assign statBitMap_data_i_V_TVALID = regslice_both_statBitMap_data_i_V_U_vld_out;

assign statOut_s_V_TVALID = regslice_both_statOut_s_V_U_vld_out;

assign state_load_load_fu_673_p1 = ap_sig_allocacmp_state_load;

assign sub_ln44_fu_809_p2 = (zext_ln1347_2_fu_797_p1 - zext_ln44_1_fu_805_p1);

assign sub_ln46_fu_827_p2 = (zext_ln46_fu_823_p1 - zext_ln1347_fu_781_p1);

assign tmp7_fu_1207_p16 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{96'd0}, {ap_phi_mux_ctx_rdma_va_low_V_phi_fu_563_p4}}}, {ap_phi_mux_ctx_rdma_va_high_or_ack_V_phi_fu_554_p4}}}, {16'd0}}}, {ctx_qp_rdma_udp_port_src_reg_1327}}}, {trunc_ln674_1_fu_1064_p1}}}, {p_Result_6_fu_1068_p4}}}, {p_Result_7_fu_1078_p4}}}, {p_Result_8_fu_1088_p4}}}, {22'd0}}}, {tmp_1_reg_1302}}}, {14'd0}}}, {writePSN_V_1_reg_1285}}}, {19'd0}}}, {local_qp_read_reg_1352}};

assign trunc_ln674_1_fu_1064_p1 = val_V_1_fu_1058_p2[7:0];

assign trunc_ln674_2_fu_1120_p1 = MSN_V_q0[31:0];

assign trunc_ln674_fu_903_p1 = ip_subnet[7:0];

assign user_fu_755_p2 = ((packetHeader_type_V_fu_720_p1 == 2'd0) ? 1'b1 : 1'b0);

assign val_V_1_fu_1058_p2 = (p_Result_10_fu_1047_p5 + zext_ln208_fu_1055_p1);

assign writePSN_l_V_TVALID = regslice_both_writePSN_l_V_U_vld_out;

assign write_r_fu_765_p1 = writePSN_V[19:0];

assign xor_ln878_1_fu_869_p2 = (icmp_ln878_fu_769_p2 ^ icmp_ln878_1_fu_775_p2);

assign xor_ln878_fu_849_p2 = (icmp_ln878_fu_769_p2 ^ 1'd1);

assign zext_ln131_fu_1010_p1 = addressInHBM_V;

assign zext_ln1345_1_fu_1182_p1 = shl_ln1345_1_fu_1175_p3;

assign zext_ln1345_fu_1171_p1 = shl_ln_fu_1164_p3;

assign zext_ln1347_1_fu_785_p1 = write_r_fu_765_p1;

assign zext_ln1347_2_fu_797_p1 = or_ln_fu_789_p3;

assign zext_ln1347_fu_781_p1 = write_r_fu_765_p1;

assign zext_ln208_fu_1055_p1 = packetHeader_qp_V_reg_1296;

assign zext_ln44_1_fu_805_p1 = read_r_fu_761_p1;

assign zext_ln44_fu_801_p1 = read_r_fu_761_p1;

assign zext_ln46_fu_823_p1 = or_ln1_fu_815_p3;

assign zext_ln52_fu_1136_p1 = ap_phi_mux_storemerge_phi_fu_543_p4;

assign zext_ln534_1_fu_698_p1 = MSNqp_V;

assign zext_ln534_2_fu_975_p1 = packetHeader_qp_V_fu_734_p4;

assign zext_ln534_fu_703_p1 = MSNqp_V;

endmodule //tx_write_dev
